{"version":3,"sources":["data.js","App.js","serviceWorker.js","index.js"],"names":["reviews","id","name","job","img","text","App","useState","currentItemIndex","setCurrentIndex","currentReview","className","src","alt","onClick","currentIndex","length","title","idx","Math","floor","random","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4JAAaA,EAAU,CACrB,CACEC,GAAI,EACJC,KAAM,cACNC,IAAK,gBACLC,IACE,oFACFC,KACE,uNAEJ,CACEJ,GAAI,EACJC,KAAM,eACNC,IAAK,eACLC,IACE,oFACFC,KACE,wMAEJ,CACEJ,GAAI,EACJC,KAAM,cACNC,IAAK,SACLC,IACE,oFACFC,KACE,iMAEJ,CACEJ,GAAI,EACJC,KAAM,gBACNC,IAAK,WACLC,IACE,oFACFC,KACE,kNC6BSC,MA7Df,WAAgB,IAAD,EAC+BC,mBAAS,GADxC,mBACNC,EADM,KACYC,EADZ,KAEPC,EAAgBV,EAAQQ,GAqB9B,OACE,yBAAKG,UAAU,OACb,8BACE,6BAASA,UAAU,aACjB,yBAAKA,UAAU,SACb,2CACA,yBAAKA,UAAU,eAGjB,6BAASA,UAAU,UACjB,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAcN,IAAKH,GAAG,aAAaY,IAAI,MAEnD,wBAAIZ,GAAG,UAAUS,EAAcR,MAC/B,uBAAGD,GAAG,OAAOS,EAAcP,KAC3B,uBAAGF,GAAG,QAAQS,EAAcL,MAC5B,yBAAKM,UAAU,oBACb,4BACEA,UAAU,WACVG,QAtCS,WACrB,IAAIC,EAAeP,EAAmB,EAClCO,EAAe,IACjBA,EAAef,EAAQgB,OAAS,GAElCP,EAAgBM,IAkCJE,MAAM,QAHR,UAOA,4BAAQN,UAAU,WAAWG,QApCtB,WACjB,IAAIC,EAAeP,EAAmB,EAClCO,EAAef,EAAQgB,OAAS,IAClCD,EAAe,GAEjBN,EAAgBM,IA+B4CE,MAAM,SAAxD,WAIF,4BAAQN,UAAU,aAAaG,QAjCpB,WACnB,IAAMI,EAAMC,KAAKC,MAAMD,KAAKE,SAAWrB,EAAQgB,QAC/CP,EAAgBS,KA+BR,oBC1CQI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.8cbadcc8.chunk.js","sourcesContent":["export const reviews = [\n  {\n    id: 1,\n    name: 'susan smith',\n    job: 'web developer',\n    img:\n      'https://res.cloudinary.com/diqqf3eq2/image/upload/v1586883334/person-1_rfzshl.jpg',\n    text:\n      \"I'm baby meggings twee health goth +1. Bicycle rights tumeric chartreuse before they sold out chambray pop-up. Shaman humblebrag pickled coloring book salvia hoodie, cold-pressed four dollar toast everyday carry\"\n  },\n  {\n    id: 2,\n    name: 'anna johnson',\n    job: 'web designer',\n    img:\n      'https://res.cloudinary.com/diqqf3eq2/image/upload/v1586883409/person-2_np9x5l.jpg',\n    text:\n      'Helvetica artisan kinfolk thundercats lumbersexual blue bottle. Disrupt glossier gastropub deep v vice franzen hell of brooklyn twee enamel pin fashion axe.photo booth jean shorts artisan narwhal.'\n  },\n  {\n    id: 3,\n    name: 'peter jones',\n    job: 'intern',\n    img:\n      'https://res.cloudinary.com/diqqf3eq2/image/upload/v1586883417/person-3_ipa0mj.jpg',\n    text:\n      'Sriracha literally flexitarian irony, vape marfa unicorn. Glossier tattooed 8-bit, fixie waistcoat offal activated charcoal slow-carb marfa hell of pabst raclette post-ironic jianbing swag.'\n  },\n  {\n    id: 4,\n    name: 'bill anderson',\n    job: 'the boss',\n    img:\n      'https://res.cloudinary.com/diqqf3eq2/image/upload/v1586883423/person-4_t9nxjt.jpg',\n    text:\n      'Edison bulb put a bird on it humblebrag, marfa pok pok heirloom fashion axe cray stumptown venmo actually seitan. VHS farm-to-table schlitz, edison bulb pop-up 3 wolf moon tote bag street art shabby chic. '\n  }\n];\n","import React, { useState } from 'react';\nimport { reviews } from './data';\n\nfunction App() {\n  const [currentItemIndex, setCurrentIndex] = useState(0);\n  const currentReview = reviews[currentItemIndex];\n\n  const previousReview = () => {\n    let currentIndex = currentItemIndex - 1;\n    if (currentIndex < 0) {\n      currentIndex = reviews.length - 1;\n    }\n    setCurrentIndex(currentIndex);\n  };\n  const nextReview = () => {\n    let currentIndex = currentItemIndex + 1;\n    if (currentIndex > reviews.length - 1) {\n      currentIndex = 0;\n    }\n    setCurrentIndex(currentIndex);\n  };\n  const randomReview = () => {\n    const idx = Math.floor(Math.random() * reviews.length);\n    setCurrentIndex(idx);\n  };\n\n  return (\n    <div className=\"App\">\n      <main>\n        <section className=\"container\">\n          <div className=\"title\">\n            <h2>our reviews</h2>\n            <div className=\"underline\"></div>\n          </div>\n\n          <article className=\"review\">\n            <div className=\"img-container\">\n              <img src={currentReview.img} id=\"person-img\" alt=\"\" />\n            </div>\n            <h4 id=\"author\">{currentReview.name}</h4>\n            <p id=\"job\">{currentReview.job}</p>\n            <p id=\"info\">{currentReview.text}</p>\n            <div className=\"button-container\">\n              <button\n                className=\"prev-btn\"\n                onClick={previousReview}\n                title=\"left\"\n              >\n                &#x2039;\n              </button>\n              <button className=\"next-btn\" onClick={nextReview} title=\"right\">\n                &#x203A;\n              </button>\n            </div>\n            <button className=\"random-btn\" onClick={randomReview}>\n              surprise me\n            </button>\n          </article>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}