{"version":3,"sources":["../node_modules/@firebase/database/dist/index.esm.js"],"names":["DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spreadArray","__read","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","bias","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","FirebaseAuthTokenProvider","appName_","firebaseOptions_","authProvider_","_this","auth_","getImmediate","optional","then","auth","getToken","forceRefresh","catch","code","Promise","reject","resolve","addTokenChangeListener","listener","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","notifyForInvalidToken","errorMessage","EmulatorAdminTokenProvider","accessToken","EMULATOR_AUTH_TOKEN","PROTOCOL_VERSION","FORGE_DOMAIN_RE","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","type","params","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","deepCopy","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","addEventListener","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","_a","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","__values","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","undefined","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","isMobileCordova","__extends","getInstance","currentlyOnline","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","validationPathCheckValid","validationPath","validationPathToErrorString","__EMPTY_NODE","MAX_NODE","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","action","onResponse","curReqNum","r","deferred","Deferred","request","p","_path","q","_queryObject","outstandingGet","index","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","self_1","lastSessionId_1","canceled_1","connection_1","closeFn_1","interrupt","resume","isEmpty","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","console","replace","e_2","values","_d","queries","_e","_f","e_2_1","clientName","isReactNative","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","VALUE_INDEX","ValueIndex","PUSH_CHARS","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsStartAt","queryParams","newParams","queryParamsEndAt","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","sparseSnapshotTreeForEachTree","prefixPath","func","forEach","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","filter","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","filterServerNode","accumulator","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","viewProcessorRevertUserWrite","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","referenceConstructor$1","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","record","writeTreeGetWrite","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","views_1","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queryKey","queriesToStop","queries_1","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","viewGetServerCache","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue_1","hasActualChild_1","validationPathPush","last","validationPathPop","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","Repo","forceRestClient_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","statsReporter_","creatorFunction","statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoOnDisconnectCancel","repoOnDisconnectSet","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","transaction","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect","cancel","wrapCallback","setWithPriority","repoOnDisconnectSetWithPriority","childrenToMerge","repoOnDisconnectUpdate","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","getModularInstance","sameRepo","samePath","sameQueryIdentifier","toJSON","encodeURIComponent","pathToUrlEncodedString","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","changedKey","changedValue","writeId_1","repoUpdate","cached","err","repoGetValue","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCB_1","cb_1","otherKeys","thisKeys","otherCount","otherKey","thisKey","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","repoAddEventCallbackForQuery","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","queryParamsEndBefore","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","queryParamsStartAfter","startAfter","QueryLimitToFirstConstraint","_limit","newLimit","queryParamsLimitToFirst","limitToFirst","limit","QueryLimitToLastConstraint","queryParamsLimitToLast","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","constraint","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","FirebaseDatabase","_repoInternal","_instanceStarted","_rootInternal","_delete","appName","repoManagerDeleteRepo","apiName","useDatabaseEmulator","repoManagerApplyEmulatorSettings","goOffline","goOnline","enableLogging$1","SERVER_TIMESTAMP","TransactionResult","committed","runTransaction","transactionUpdate","currentState","queueNode","priorityForNode","repoStartTransaction","OnDisconnect$1","_delegate","validateArgCount","validateCallback","objectToMerge","newObjectToMerge","TransactionResult$1","DataSnapshot$1","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","validateContextObject","once","failureCallbackOrContext","cancelOrContext","getKey","getParent","getRoot","transactionResult","expPromise","expRef","Database","INTERNAL","useEmulator","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStats","statsIncrementCounter","metric","reporter","repoStatsIncrementCounter","interceptServerData","repoInterceptServerData","initStandalone","customAuthImpl","Provider","ComponentContainer","setComponent","Component","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","queryIdentifier","forceRestClient","repoManagerForceRestClient","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase","firebase"],"mappings":"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","file":"static/js/6.13b24984.chunk.js","sourcesContent":["import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nvar name = \"@firebase/database\";\nvar version = \"0.9.10\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    };\r\n    Object.defineProperty(RepoInfo.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        set: function (newHost) {\r\n            if (newHost !== this.internalHost) {\r\n                this.internalHost = newHost;\r\n                if (this.isCacheableHost()) {\r\n                    PersistentStorage.set('host:' + this._host, this.internalHost);\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    var connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    var pairs = [];\r\n    each(params, function (key, value) {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar collections = {};\r\nvar reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    var hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    var hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId - An identifier for this connection, used for logging\r\n     * @param repoInfo - The info for the endpoint to send data to.\r\n     * @param applicationId - The Firebase App ID for this project.\r\n     * @param transportSessionId - Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId - Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId - identifier for this transport\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param applicationId - The Firebase App ID for this project.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spreadArray([], __read(this.listeners_[eventType]));\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nvar MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nvar MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n    return ValidationPath;\r\n}());\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    var last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query._queryIdentifier;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                var indexPath = query._path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        var _this = this;\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (_this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    LeafNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        var pathString = query._path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        var child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                var value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\r\n            var path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach(function (tree, key) {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\r\nfunction statsReporterIncludeStat(reporter, stat) {\r\n    reporter.statsToReport_[stat] = true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache: eventCache, serverCache: serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        snap: snap,\r\n        writeId: writeId,\r\n        visible: visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        children: changedChildren,\r\n        writeId: writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (var i = 0; i < writeTree.allWrites.length; i++) {\r\n        var record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    var idx = writeTree.allWrites.findIndex(function (s) {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    var writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    var removedWriteWasVisible = writeToRemove.visible;\r\n    var removedWriteOverlapsWithOtherWrites = false;\r\n    var i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        var currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            var children = writeToRemove.children;\r\n            each(children, function (childName) {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (var childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    var compoundWrite = CompoundWrite.empty();\r\n    for (var i = 0; i < writes.length; ++i) {\r\n        var write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            var writePath = write.path;\r\n            var relativePath = void 0;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        var child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            var deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                var filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    var completeChildren = ChildrenNode.EMPTY_NODE;\r\n    var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    var path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    var path = pathChild(treePath, childKey);\r\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    var toIterate;\r\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        var nodes = [];\r\n        var cmp = index.getCompare();\r\n        var iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        var next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree: writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    };\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter: filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    var accumulator = new ChildChangeAccumulator();\r\n    var newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        var overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        var merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        var ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    var changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes: changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    var eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    var oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var newEventCache = void 0, serverNode = void 0;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                var serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                var completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                var oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                var newEventChild = void 0;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    var oldServerSnap = oldViewCache.serverCache;\r\n    var newServerCache;\r\n    var serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        var newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        var childChangePath = pathPopFront(changePath);\r\n        var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    var oldEventSnap = oldViewCache.eventCache;\r\n    var newViewCache, newEventCache;\r\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            var childChangePath = pathPopFront(changePath);\r\n            var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            var newChild = void 0;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                var childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach(function (relativePath, childNode) {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    var viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    var serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n        if (serverNode.hasChild(childKey)) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n        var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    var filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    var serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            var changedChildren_1 = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        var changedChildren_2 = new ImmutableTree(null);\r\n        affectedTree.foreach(function (mergePath, value) {\r\n            var serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    var oldServerNode = viewCache.serverCache;\r\n    var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    var complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        var oldEventCache = viewCache.eventCache.getNode();\r\n        var newEventCache = void 0;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            var newNode = void 0;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                var serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_._queryParams;\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.serverCache;\r\n        var initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    Object.defineProperty(View.prototype, \"query\", {\r\n        get: function () {\r\n            return this.query_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return View;\r\n}());\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    var cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        var path_1 = view.query._path;\r\n        view.eventRegistrations_.forEach(function (registration) {\r\n            var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        var remaining = [];\r\n        for (var i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            var existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    var oldViewCache = view.viewCache_;\r\n    var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    var eventSnap = view.viewCache_.eventCache;\r\n    var initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        var eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    var registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    return SyncPoint;\r\n}());\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    var e_1, _a;\r\n    var queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        var view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        var events = [];\r\n        try {\r\n            for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    var queryId = query._queryIdentifier;\r\n    var view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        var eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    var e_2, _a;\r\n    var queryId = query._queryIdentifier;\r\n    var removed = [];\r\n    var cancelEvents = [];\r\n    var hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        try {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n                if (viewIsEmpty(view)) {\r\n                    syncPoint.views.delete(viewQueryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.query._queryParams.loadsAllData()) {\r\n                        removed.push(view.query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        var view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed: removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    var e_3, _a;\r\n    var result = [];\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (!view.query._queryParams.loadsAllData()) {\r\n                result.push(view);\r\n            }\r\n        }\r\n    }\r\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_3) throw e_3.error; }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    var e_4, _a;\r\n    var serverCache = null;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n        }\r\n    }\r\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_4) throw e_4.error; }\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    var params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        var queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    var e_5, _a;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (view.query._queryParams.loadsAllData()) {\r\n                return view;\r\n            }\r\n        }\r\n    }\r\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_5) throw e_5.error; }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor$1;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nvar syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    return SyncTree;\r\n}());\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\r\n    if (revert === void 0) { revert = false; }\r\n    var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        var affectedTree_1 = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, function (pathString) {\r\n                affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    var path = query._path;\r\n    var maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    var cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        var removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        var removingDefault = -1 !==\r\n            removed.findIndex(function (query) {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n            return syncPointHasCompleteView(parentSyncPoint);\r\n        });\r\n        if (removingDefault && !covered) {\r\n            var subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (var i = 0; i < newViews.length; ++i) {\r\n                    var view = newViews[i], newQuery = view.query;\r\n                    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                var defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach(function (queryToRemove) {\r\n                    var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    var foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        var subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild(function (childName, childSyncPoint) {\r\n            var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        var queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        var tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        var view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    var includeHiddenSets = true;\r\n    var writeTree = syncTree.pendingWriteTree_;\r\n    var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n        var relativePath = newRelativePath(pathSoFar, path);\r\n        var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete = serverCache != null;\r\n    var serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        var events = [];\r\n        var childName = pathGetFront(operation.path);\r\n        var childOperation = operation.operationForChild(childName);\r\n        var childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    var syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var events = [];\r\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n        var childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        var childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    var query = view.query;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: function () {\r\n            var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: function (status) {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                var error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    var queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    var splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    var syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            var views_1 = [];\r\n            if (maybeChildSyncPoint) {\r\n                views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, function (_key, childViews) {\r\n                views_1 = views_1.concat(childViews);\r\n            });\r\n            return views_1;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (var j = 0; j < queries.length; ++j) {\r\n        var removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    var path = query._path;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    var subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                var queries_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) { return view.query; }));\r\n                }\r\n                each(childMap, function (_key, childQueries) {\r\n                    queries_1 = queries_1.concat(childQueries);\r\n                });\r\n                return queries_1;\r\n            }\r\n        });\r\n        for (var i = 0; i < queriesToStop.length; ++i) {\r\n            var queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    function Tree(name, parent, node) {\r\n        if (name === void 0) { name = ''; }\r\n        if (parent === void 0) { parent = null; }\r\n        if (node === void 0) { node = { children: {}, childCount: 0 }; }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n    return Tree;\r\n}());\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    var child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        var childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, function (child, childTree) {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, function (child) {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    var node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    var childEmpty = treeIsEmpty(child);\r\n    var childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, authTokenProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    return Repo;\r\n}());\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(function () { return repoOnConnectStatus(repo, /* connectStatus= */ true); }, 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, function (connectStatus) {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, function (updates) {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(function (token) {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () { return new StatsReporter(repo.stats_, repo.server_); });\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            var infoEvents = [];\r\n            var node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(function () {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: function () { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            repo.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                var events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: function (query, tag) {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    var offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    var path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    var events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            var taggedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            var taggedSnap = nodeFromJSON$1(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        var changedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        var snap = nodeFromJSON$1(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    var affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\n// TODO: This should be @private but it's used by test_access.js and internal.js\r\nfunction repoInterceptServerData(repo, callback) {\r\n    repo.interceptServerDataCallback_ = callback;\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, function (key, value) {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    var path = new Path('/.info/' + pathString);\r\n    var newNode = nodeFromJSON$1(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(function (payload) {\r\n        var node = nodeFromJSON$1(payload);\r\n        var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, function (err) {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n    var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    var writeId = repoGetNextWriteId(repo);\r\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n        var success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    var affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    var empty = true;\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var changedChildren = {};\r\n    each(childrenToMerge, function (changedKey, changedValue) {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        var writeId_1 = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\r\n            var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, function (changedPath) {\r\n            var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\r\n        var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    var events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        var affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    var newNode = nodeFromJSON$1(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    var newNode = nodeFromJSON$1(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, function (childName, childNode) {\r\n                var newChildNode = nodeFromJSON$1(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoStats(repo, showDelta) {\r\n    if (showDelta === void 0) { showDelta = false; }\r\n    if (typeof console === 'undefined') {\r\n        return;\r\n    }\r\n    var stats;\r\n    if (showDelta) {\r\n        if (!repo.statsListener_) {\r\n            repo.statsListener_ = new StatsListener(repo.stats_);\r\n        }\r\n        stats = repo.statsListener_.get();\r\n    }\r\n    else {\r\n        stats = repo.stats_.get();\r\n    }\r\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n        return Math.max(currentValue.length, previousValue);\r\n    }, 0);\r\n    each(stats, function (stat, value) {\r\n        var paddedStat = stat;\r\n        // pad stat names to be the same length (plus 2 extra spaces).\r\n        for (var i = stat.length; i < longestName + 2; i++) {\r\n            paddedStat += ' ';\r\n        }\r\n        console.log(paddedStat + value);\r\n    });\r\n}\r\nfunction repoStatsIncrementCounter(repo, metric) {\r\n    repo.stats_.incrementCounter(metric);\r\n    statsReporterIncludeStat(repo.statsReporter_, metric);\r\n}\r\nfunction repoLog(repo) {\r\n    var varArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        varArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(function () {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                var code = (status || 'error').toUpperCase();\r\n                var message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                var error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        var queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        var nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        var serverValues = repoGenerateServerValues(repo);\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node) {\r\n    if (node === void 0) { node = repo.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        var queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === 0 /* RUN */; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, function (childNode) {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        var relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            var callbacks = [];\r\n            var _loop_1 = function (i) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\r\n                    });\r\n                }\r\n                queue[i].unwatcher();\r\n            };\r\n            for (var i = 0; i < queue.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    var path = treeGetPath(rootMostTransactionNode);\r\n    var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    var _loop_2 = function (i) {\r\n        var transaction = queue[i];\r\n        var relativePath = newRelativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = repoGenerateServerValues(repo);\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\r\n                    });\r\n                }\r\n                else {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(new Error(abortReason), false, null);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < queue.length; i++) {\r\n        _loop_2(i);\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    var transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) { return a.order - b.order; });\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    var nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, function (child) {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, function (childNode) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    };\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nvar CallbackContext = /** @class */ (function () {\r\n    function CallbackContext(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    };\r\n    CallbackContext.prototype.onCancel = function (error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    };\r\n    Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\r\n        get: function () {\r\n            return !!this.cancelCallback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CallbackContext.prototype.matches = function (other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback ===\r\n                other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    };\r\n    return CallbackContext;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function OnDisconnect(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.cancel = function () {\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.remove = function () {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.set = function (value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.update = function (values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nvar QueryImpl = /** @class */ (function () {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    Object.defineProperty(QueryImpl.prototype, \"key\", {\r\n        get: function () {\r\n            if (pathIsEmpty(this._path)) {\r\n                return null;\r\n            }\r\n            else {\r\n                return pathGetBack(this._path);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"ref\", {\r\n        get: function () {\r\n            return new ReferenceImpl(this._repo, this._path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\r\n        get: function () {\r\n            var obj = queryParamsGetQueryObject(this._queryParams);\r\n            var id = ObjectToUniqueKey(obj);\r\n            return id === '{}' ? 'default' : id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\r\n        /**\r\n         * An object representation of the query parameters used by this Query.\r\n         */\r\n        get: function () {\r\n            return queryParamsGetQueryObject(this._queryParams);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    QueryImpl.prototype.isEqual = function (other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        var sameRepo = this._repo === other._repo;\r\n        var samePath = pathEquals(this._path, other._path);\r\n        var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    QueryImpl.prototype.toJSON = function () {\r\n        return this.toString();\r\n    };\r\n    QueryImpl.prototype.toString = function () {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    };\r\n    return QueryImpl;\r\n}());\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    var startNode = null;\r\n    var endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nvar ReferenceImpl = /** @class */ (function (_super) {\r\n    __extends(ReferenceImpl, _super);\r\n    /** @hideconstructor */\r\n    function ReferenceImpl(repo, path) {\r\n        return _super.call(this, repo, path, new QueryParams(), false) || this;\r\n    }\r\n    Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\r\n        get: function () {\r\n            var parentPath = pathParent(this._path);\r\n            return parentPath === null\r\n                ? null\r\n                : new ReferenceImpl(this._repo, parentPath);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceImpl.prototype, \"root\", {\r\n        get: function () {\r\n            var ref = this;\r\n            while (ref.parent !== null) {\r\n                ref = ref.parent;\r\n            }\r\n            return ref;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ReferenceImpl;\r\n}(QueryImpl));\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    function DataSnapshot(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    Object.defineProperty(DataSnapshot.prototype, \"priority\", {\r\n        /**\r\n         * Gets the priority value of the data in this `DataSnapshot`.\r\n         *\r\n         * Applications need not use priority but can order collections by\r\n         * ordinary properties (see\r\n         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n         * ).\r\n         */\r\n        get: function () {\r\n            // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n            return this._node.getPriority().val();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        /**\r\n         * The key (last part of the path) of the location of this `DataSnapshot`.\r\n         *\r\n         * The last token in a Database location is considered its key. For example,\r\n         * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n         * `DataSnapshot` will return the key for the location that generated it.\r\n         * However, accessing the key on the root URL of a Database will return\r\n         * `null`.\r\n         */\r\n        get: function () {\r\n            return this.ref.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"size\", {\r\n        /** Returns the number of child properties of this `DataSnapshot`. */\r\n        get: function () {\r\n            return this._node.numChildren();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        var childPath = new Path(path);\r\n        var childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        return !this._node.isEmpty();\r\n    };\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        return this._node.val(true);\r\n    };\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, function (key, node) {\r\n            return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        var childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    };\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.val = function () {\r\n        return this._node.val();\r\n    };\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    var repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    var now = repoServerTime(parent._repo);\r\n    var name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    var thennablePushRef = child(parent, name);\r\n    var pushRef = child(parent, name);\r\n    var promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(function () { return pushRef; });\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(function (node) {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    };\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, null);\r\n            };\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbackContext !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might\r\n * let you register a group of callbacks together in the future.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(callbacks) {\r\n        this.callbacks = callbacks;\r\n    }\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return contains(this.callbacks, eventToCheck);\r\n    };\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbacks['cancel'].hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    };\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            var cancelCB_1 = this.callbacks['cancel'];\r\n            return function () { return cancelCB_1.onCancel(eventData.error); };\r\n        }\r\n        else {\r\n            var cb_1 = this.callbacks[eventData.eventType];\r\n            return function () {\r\n                return cb_1.onValue(eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks || !other.callbacks) {\r\n                return true;\r\n            }\r\n            else {\r\n                var otherKeys = Object.keys(other.callbacks);\r\n                var thisKeys = Object.keys(this.callbacks);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks[otherKey] ||\r\n                                !this.callbacks[thisKey] ||\r\n                                other.callbacks[otherKey].matches(this.callbacks[thisKey])));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks[eventType].matches(_this.callbacks[eventType]);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    var _a;\r\n    var cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        var userCallback_1 = callback;\r\n        var onceCallback = function (dataSnapshot, previousChildName) {\r\n            userCallback_1(dataSnapshot, previousChildName);\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    var container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration((_a = {},\r\n            _a[eventType] = callbackContext,\r\n            _a));\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return function () { return repoRemoveEventCallbackForQuery(query._repo, query, container); };\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    var container = null;\r\n    var callbacks = null;\r\n    var expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        if (callback) {\r\n            callbacks = {};\r\n            callbacks[eventType] = expCallback;\r\n        }\r\n        container = new ChildEventRegistration(callbacks);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nvar QueryConstraint = /** @class */ (function () {\r\n    function QueryConstraint() {\r\n    }\r\n    return QueryConstraint;\r\n}());\r\nvar QueryEndAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndAtConstraint, _super);\r\n    function QueryEndAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nvar QueryEndBeforeConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndBeforeConstraint, _super);\r\n    function QueryEndBeforeConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndBeforeConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndBeforeConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nvar QueryStartAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAtConstraint, _super);\r\n    function QueryStartAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value, key) {\r\n    if (value === void 0) { value = null; }\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nvar QueryStartAfterConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAfterConstraint, _super);\r\n    function QueryStartAfterConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAfterConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAfterConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nvar QueryLimitToFirstConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToFirstConstraint, _super);\r\n    function QueryLimitToFirstConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToFirstConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToFirstConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nvar QueryLimitToLastConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToLastConstraint, _super);\r\n    function QueryLimitToLastConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToLastConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToLastConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nvar QueryOrderByChildConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByChildConstraint, _super);\r\n    function QueryOrderByChildConstraint(_path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._path = _path;\r\n        return _this;\r\n    }\r\n    QueryOrderByChildConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        var parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByChildConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nvar QueryOrderByKeyConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByKeyConstraint, _super);\r\n    function QueryOrderByKeyConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByKeyConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByKeyConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nvar QueryOrderByPriorityConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByPriorityConstraint, _super);\r\n    function QueryOrderByPriorityConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByPriorityConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByPriorityConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nvar QueryOrderByValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByValueConstraint, _super);\r\n    function QueryOrderByValueConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByValueConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nvar QueryEqualToValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEqualToValueConstraint, _super);\r\n    function QueryEqualToValueConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEqualToValueConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    };\r\n    return QueryEqualToValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query) {\r\n    var e_1, _a;\r\n    var queryConstraints = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        queryConstraints[_i - 1] = arguments[_i];\r\n    }\r\n    var queryImpl = getModularInstance(query);\r\n    try {\r\n        for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\r\n            var constraint = queryConstraints_1_1.value;\r\n            queryImpl = constraint._apply(queryImpl);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar repos = {};\r\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\r\nvar useRestClient = false;\r\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port) {\r\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin) {\r\n    var dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n    }\r\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    var repoInfo = parsedUrl.repoInfo;\r\n    var isEmulator;\r\n    var dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined') {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    var authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorAdminTokenProvider()\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider);\r\n    return new FirebaseDatabase(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    var appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider) {\r\n    var appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    var repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nvar FirebaseDatabase = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function FirebaseDatabase(_repoInternal, \r\n    /** The FirebaseApp associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a database instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\r\n        get: function () {\r\n            if (!this._instanceStarted) {\r\n                repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n                this._instanceStarted = true;\r\n            }\r\n            return this._repoInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\r\n        get: function () {\r\n            if (!this._rootInternal) {\r\n                this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n            }\r\n            return this._rootInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseDatabase.prototype._delete = function () {\r\n        this._checkNotDeleted('delete');\r\n        repoManagerDeleteRepo(this._repo, this.app.name);\r\n        this._repoInternal = null;\r\n        this._rootInternal = null;\r\n        return Promise.resolve();\r\n    };\r\n    FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    return FirebaseDatabase;\r\n}());\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n */\r\nfunction useDatabaseEmulator(db, host, port) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(db._repo, host, port);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\r\nfunction enableLogging$1(logger, persistent) {\r\n    enableLogging(logger, persistent);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function TransactionResult(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    TransactionResult.prototype.toJSON = function () {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    var deferred = new Deferred();\r\n    var promiseComplete = function (error, committed, node) {\r\n        var dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    var unwatcher = onValue(ref, function () { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect$1 = /** @class */ (function () {\r\n    function OnDisconnect(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        var result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        var result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        var result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        var result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult$1 = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot$1 = /** @class */ (function () {\r\n    function DataSnapshot(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(function (expDataSnapshot) {\r\n            return action(new DataSnapshot(_this._database, expDataSnapshot));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this._delegate.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    };\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        var _this = this;\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            callback.call(ret.context, new DataSnapshot$1(_this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            var valueCallback = function () { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        var _this = this;\r\n        return get(this._delegate).then(function (expSnapshot) {\r\n            return new DataSnapshot$1(_this.database, expSnapshot);\r\n        });\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', failureCallbackOrContext, context);\r\n        var deferred = new Deferred();\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            var result = new DataSnapshot$1(_this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = function (error) {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    };\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(database, _delegate) {\r\n        var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\r\n        _this.database = database;\r\n        _this._delegate = _delegate;\r\n        return _this;\r\n    }\r\n    /** @returns {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    };\r\n    /** @returns {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    };\r\n    /** @returns {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        var result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.update = function (values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        var result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        var result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        var _this = this;\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        var result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally: applyLocally\r\n        }).then(function (transactionResult) {\r\n            return new TransactionResult$1(transactionResult.committed, new DataSnapshot$1(_this.database, transactionResult.snapshot));\r\n        });\r\n        if (onComplete) {\r\n            result.then(function (transactionResult) {\r\n                return onComplete(null, transactionResult.committed, transactionResult.snapshot);\r\n            }, function (error) { return onComplete(error, false, null); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        var result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        var _this = this;\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        var expPromise = push(this._delegate, value);\r\n        var promise = expPromise.then(function (expRef) { return new Reference(_this.database, expRef); });\r\n        if (onComplete) {\r\n            promise.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        var result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect$1(new OnDisconnect(this._delegate._repo, this._delegate._path));\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(_delegate, app) {\r\n        var _this = this;\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this._delegate._delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     */\r\n    Database.prototype.useEmulator = function (host, port) {\r\n        useDatabaseEmulator(this._delegate, host, port);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            var childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            var childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        var apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: serverTimestamp(),\r\n        increment: function (delta) { return increment(delta); }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    var connection = ref._delegate._repo.persistentConnection_;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    connection.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    repoStats(ref._delegate._repo, showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    repoStatsIncrementCounter(ref._delegate._repo, metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref._delegate._repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return repoInterceptServerData(ref._delegate._repo, callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: new Database(repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin), app),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query._delegate._queryIdentifier;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\r\n        var url = _a.instanceIdentifier;\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return new Database(repoManagerDatabaseFromApp(app, authProvider, url), app);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot$1,\r\n        enableLogging: enableLogging$1,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot$1 as DataSnapshot, Database, OnDisconnect$1 as OnDisconnect, Query, Reference, ServerValue, enableLogging$1 as enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}