{"version":3,"sources":["Components/Header/Header.js","AppContext.js","Components/Navbar/Nav.js","Components/Card/Card.js","Api/index.js","Hooks/useFetch.js","Api/requests.js","Components/Results/Results.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","viewBox","fill","d","fillRule","clipRule","src","alt","AppContext","createContext","AppProvider","children","useState","type","setType","Provider","value","NavLinks","key","name","Nav","useContext","map","onClick","Card","movie","imageUrl","backdrop_path","poster_path","title","original_name","loading","overview","release_date","vote_count","axios","defaults","baseURL","interceptors","request","use","config","url","split","paramString","params","URLSearchParams","set","process","toString","error","Promise","reject","initialState","isLoading","data","useFetch","state","setState","useEffect","a","API","get","response","fetchData","Trending","TopRated","Action","Comedy","Horror","Romance","Mystery","SciFi","Western","Animation","TV","Results","requests","JSON","stringify","results","id","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.44d65217.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <div className=\"header__icons\">\n        <div className=\"header__icon header__icon--active\">\n          <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"home w-6 h-6\">\n            <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"></path>\n          </svg>\n          <p>Home</p>\n        </div>\n        <div className=\"header__icon\">\n          <svg\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"light-bulb w-6 h-6\"\n          >\n            <path d=\"M11 3a1 1 0 10-2 0v1a1 1 0 102 0V3zM15.657 5.757a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707zM18 10a1 1 0 01-1 1h-1a1 1 0 110-2h1a1 1 0 011 1zM5.05 6.464A1 1 0 106.464 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zM5 10a1 1 0 01-1 1H3a1 1 0 110-2h1a1 1 0 011 1zM8 16v-1h4v1a2 2 0 11-4 0zM12 14c.015-.34.208-.646.477-.859a4 4 0 10-4.954 0c.27.213.462.519.476.859h4.002z\" />\n          </svg>\n          <p>Trending</p>\n        </div>\n        <div className=\"header__icon\">\n          <svg\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"check-circle w-6 h-6\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          <p>My Stuff</p>\n        </div>\n        <div className=\"header__icon\">\n          <svg\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"collection w-6 h-6\"\n          >\n            <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\"></path>\n          </svg>\n          <p>Collection</p>\n        </div>\n        <div className=\"header__icon\">\n          <svg\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"search w-6 h-6\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </svg>\n          <p>Search</p>\n        </div>\n        <div className=\"header__icon\">\n          <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"user w-6 h-6\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </svg>\n          <p>Account</p>\n        </div>\n      </div>\n      <img\n        src=\"https://press.hulu.com/wp-content/uploads/2020/02/hulu-white.png\"\n        alt=\"hulu\"\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { createContext, useState } from 'react';\nexport const AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n  const [type, setType] = useState('Trending');\n  return (\n    <AppContext.Provider value={{ type, setType }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppProvider };\n","import React, { useContext } from 'react';\nimport './Nav.css';\nimport { AppContext } from './../../AppContext';\n\nconst NavLinks = [\n  { key: 'Trending', name: 'Trending' },\n  { key: 'TopRated', name: 'Top Rated' },\n  { key: 'Action', name: 'Action' },\n  { key: 'Comedy', name: 'Comedy' },\n  { key: 'Horror', name: 'Horror' },\n  { key: 'Romance', name: 'Romance' },\n  { key: 'Mystery', name: 'Mystery' },\n  { key: 'SciFi', name: 'Sci-fi' },\n  { key: 'Western', name: 'Western' },\n  { key: 'Animation', name: 'Animation' },\n  { key: 'TV', name: 'Movies' },\n];\n\nconst Nav = () => {\n  const { type, setType } = useContext(AppContext);\n  return (\n    <nav className=\"nav\">\n      {NavLinks.map(({ key, name }) => (\n        <h2\n          className={type === key ? 'active' : ''}\n          onClick={() => setType(key)}\n        >\n          {name}\n        </h2>\n      ))}\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport './Card.css';\nconst BSAE_URL = 'https://image.tmdb.org/t/p/original/';\n\nconst Card = ({ movie }) => {\n  const imageUrl = `${BSAE_URL}${movie.backdrop_path || movie.poster_path}`;\n\n  return (\n    <div className=\"card\">\n      <img\n        src={imageUrl}\n        alt={movie.title || movie.original_name}\n        loading=\"lazy\"\n      />\n      <p className=\"overview\">{movie.overview}</p>\n      <h2>{movie.title || movie.original_name}</h2>\n      <p className=\"card__stats\">\n        {movie.release_date}{' '}\n        <svg\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          className=\"thumb-up w-6 h-6\"\n        >\n          <path d=\"M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z\"></path>\n        </svg>\n        {movie.vote_count}\n      </p>\n    </div>\n  );\n};\n\nexport default Card;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.interceptors.request.use(\n  (config) => {\n    const [url, paramString] = config.url.split('?');\n    const params = new URLSearchParams(paramString);\n    params.set('api_key', process.env.REACT_APP_TMD_API_KEY);\n    return { ...config, url: `${url}?${params.toString()}` };\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n\nexport const getSource = () => axios.CancelToken.source();\n\nexport default axios;\n","import { useEffect, useState } from 'react';\nimport API from '../Api';\n\nconst initialState = { isLoading: false, data: null, error: null };\n\nconst useFetch = (type = '') => {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setState({ ...state, isLoading: true });\n      try {\n        const response = await API.get(type);\n        setState({ ...state, isLoading: false, data: response.data });\n      } catch (error) {\n        setState({ ...state, isLoading: false, error });\n      }\n    };\n    fetchData();\n  }, [type]);\n\n  return { ...state };\n};\nexport default useFetch;\n","export default {\n  Trending: `/trending/all/week?language=en-US`,\n  TopRated: `/movie/top_rated?language=en-US`,\n  Action: `/discover/movie?with_genres=28`,\n  Comedy: `/discover/movie?with_genres=35`,\n  Horror: `/discover/movie?with_genres=27`,\n  Romance: `/discover/movie?with_genres=10749`,\n  Mystery: `/discover/movie?with_genres=9648`,\n  SciFi: `/discover/movie?with_genres=878`,\n  Western: `/discover/movie?with_genres=37`,\n  Animation: `/discover/movie?with_genres=16`,\n  TV: `/discover/movie?with_genres=10770`,\n};\n","import React, { useContext } from 'react';\nimport Card from '../Card/Card.js';\nimport './Results.css';\nimport { AppContext } from './../../AppContext';\nimport useFetch from '../../Hooks/useFetch';\nimport requests from '../../Api/requests.js';\n\nconst Results = () => {\n  const { type } = useContext(AppContext);\n  const { isLoading, data, error } = useFetch(requests[type]);\n  if (error)\n    return <code className=\"error\">{JSON.stringify(error, null, 4)}</code>;\n  return (\n    <section className=\"results\">\n      {isLoading\n        ? '...'\n        : data?.results?.map((movie) => <Card movie={movie} key={movie.id} />)}\n    </section>\n  );\n};\n\nexport default Results;\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header.js';\nimport Nav from './Components/Navbar/Nav.js';\nimport Results from './Components/Results/Results.js';\nimport { AppProvider } from './AppContext';\n\nfunction App() {\n  return (\n    <AppProvider>\n      <div className=\"app\">\n        <Header />\n        <Nav />\n        <Results />\n      </div>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}