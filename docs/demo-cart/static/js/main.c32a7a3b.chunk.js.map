{"version":3,"sources":["logo.svg","ColorModeSwitcher.js","components/Navbar.js","actions/cart.actions.js","components/Item.js","actions/product.actions.js","components/Home.js","components/ProductDetails.js","components/ProductAddEdit.js","components/Cart.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/index.js","store/index.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","NavBar","cartItems","useSelector","state","cart","boxShadow","px","bg","position","w","zIndex","h","alignItems","justifyContent","spacing","to","src","logo","alt","colorScheme","leftIcon","ml","p","length","borderRadius","right","top","as","MdShoppingCart","justifySelf","Button","rounded","cursor","ADD_ITEM_TO_CART","DELETE_ITEM_FROM_CART","addItemToCart","item","type","payload","Item","dispatch","useDispatch","pathname","id","maxW","borderWidth","overflow","_hover","transform","image","title","maxH","height","d","fontWeight","letterSpacing","textTransform","category","mt","lineHeight","isTruncated","whiteSpace","textAlign","price","label","e","stopPropagation","preventDefault","SET_PRODUCT_DETAILS","SET_PRODUCTS","SET_PRODUCT_CATAGORIES","ADD_NEW_PRODUCT","fetchData","url","a","fetch","result","json","setProductDetails","productDetails","Home","product","items","itemsLoaded","useEffect","products","columns","sm","md","lg","xl","map","i","m","ProductDetails","useLocation","params","useParams","description","ProductAddEdit","categories","history","useHistory","validationSchema","yup","required","width","initialValues","onSubmit","values","actions","setSubmitting","method","body","JSON","stringify","push","noValidate","name","field","form","isRequired","isInvalid","errors","touched","htmlFor","placeholder","component","FormErrorMessage","index","isLoading","isSubmitting","Cart","deleteItem","deleteItemFromCart","isNumeric","viewProductDetails","parseFloat","quantity","toFixed","initialState","rootReducer","combineReducers","action","findIndex","slice","filter","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","App","loading","hashType","theme","pt","mr","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"2PAAe,MAA0B,iC,iCCI5BA,EAAoB,SAAAC,GAAU,IACjCC,EAAoBC,cAApBD,gBACFE,EAAOC,YAAkB,OAAQ,SACjCC,EAAaD,YAAkBE,IAAQC,KAE7C,OACE,cAAC,IAAD,aACEC,KAAK,KACLC,SAAS,KACTC,aAAA,oBAAyBP,EAAzB,SACAQ,QAAQ,QACRC,MAAM,UACNC,WAAW,IACXC,QAASb,EACTc,KAAM,cAACV,EAAD,KACFL,K,yBCIK,SAASgB,IACtB,IAAMC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,aAElD,OACE,cAAC,IAAD,CACEI,UAAU,OACVC,GAAI,EACJC,GAAG,WACHC,SAAS,QACTC,EAAE,QACFC,OAAO,IANT,SAQE,eAAC,IAAD,CAAMC,EAAG,GAAIC,WAAY,SAAUC,eAAgB,gBAAnD,UACE,cAAC,IAAD,CAAQC,QAAS,EAAGF,WAAY,SAAhC,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYG,GAAI,IAAhB,SACE,cAAC,IAAD,CAAQvB,KAAM,KAAMwB,IAAKC,EAAMC,IAAI,oBAIzC,eAAC,IAAD,CAAMN,WAAY,SAAlB,UACE,cAAC,IAAD,CAAYG,GAAG,eAAf,SACE,cAAC,IAAD,CACEpB,QAAS,QACTwB,YAAa,OACb3B,KAAM,KACN4B,SAAU,cAAC,IAAD,IAJZ,mBASF,cAAC,IAAD,CAAYL,GAAI,QAAhB,SACE,cAAC,IAAD,CACEvB,KAAK,KACLC,SAAS,KACTC,aAAW,OACXC,QAAQ,QACR0B,GAAI,EACJC,EAAG,EANL,SAQE,eAAC,IAAD,WACGrB,EAAUsB,OAAS,GAClB,cAAC,IAAD,CACEf,SAAS,WACTgB,aAAa,MACbC,OAAQ,EACRC,KAAM,EACNJ,EAAG,EACHf,GAAG,MACHX,MAAM,QACNH,SAAS,KARX,SAUGQ,EAAUsB,SAGf,cAAC,IAAD,CAAMI,GAAIC,IAAgBnB,EAAG,EAAGE,EAAG,WAIzC,cAAC,EAAD,CAAmBkB,YAAY,aAC/B,eAAC,IAAD,WACE,cAAC,IAAD,CACEF,GAAIG,IACJC,QAAS,OACTpC,QAAS,OACTqC,OAAQ,UACRtC,aAAW,UALb,SAOE,cAAC,IAAD,CACEF,KAAM,KACNwB,IACE,6JAEFE,IAAI,WAGR,eAAC,IAAD,WACE,cAAC,IAAD,qBACA,cAAC,IAAD,qBACA,cAAC,IAAD,IACA,cAAC,IAAD,mC,wCCvGDe,EAAmB,mBACnBC,EAAwB,wBAExBC,EAAgB,SAAAC,GAC3B,MAAO,CAAEC,KAAMJ,EAAkBK,QAASF,ICwE7BG,EApEF,SAAC,GAAc,IAAZH,EAAW,EAAXA,KACRI,EAAWC,cAQjB,OACE,cAAC,IAAD,CAAM1B,GAAI,CAAE2B,SAAS,YAAD,OAAcN,EAAKO,IAAMxC,MAAO,CAAEiC,SAAtD,SACE,eAAC,IAAD,CACE/B,UAAU,OACVuC,KAAK,KACLC,YAAY,MACZrB,aAAa,KACbsB,SAAS,SALX,UAOE,cAAC,IAAD,CAAKxB,EAAE,IAAP,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEyB,OAAQ,CAAEC,UAAU,cACpBhC,IAAKoB,EAAKa,MACV/B,IAAKkB,EAAKc,MACVC,KAAK,MACLC,OAAO,YAKb,eAAC,IAAD,CAAK9B,EAAE,IAAP,UACE,cAAC,IAAD,CAAK+B,EAAE,OAAOzC,WAAW,WAAzB,SACE,cAAC,IAAD,CACEhB,MAAM,WACN0D,WAAW,WACXC,cAAc,OACd9D,SAAS,KACT+D,cAAc,YALhB,SAOGpB,EAAKqB,aAIV,cAAC,IAAD,CACEC,GAAG,IACHJ,WAAW,WACX3B,GAAG,KACHgC,WAAW,QACXC,aAAW,EACXC,WAAW,OACXC,UAAU,OAPZ,SASG1B,EAAKc,QAER,eAAC,IAAD,CAAMrC,eAAe,gBAArB,UACE,eAAC,IAAD,CAAKiD,UAAU,OAAf,cAAwB1B,EAAK2B,SAC7B,cAAC,IAAD,CAASC,MAAM,cAAcvE,SAAS,KAAtC,SACE,cAAC,IAAD,CAAQE,QAAQ,QAAQ2B,EAAG,EAAGxB,QAtDb,SAAAmE,GAC3BA,EAAEC,kBACFD,EAAEE,iBACF3B,EAASL,EAAcC,KAmDb,SACE,cAAC,IAAD,CAAMT,GAAIC,IAAgBnB,EAAG,EAAGE,EAAG,oB,yBClEtCyD,EAAsB,sBACtBC,EAAe,eACfC,EAAyB,yBACzBC,EAAkB,kBAEzBC,EAAS,uCAAG,WAAMC,GAAN,eAAAC,EAAA,4DACC,2BADD,kBAGOC,MAAM,GAAD,OAFX,4BAEW,OAAeF,IAH3B,cAGRG,EAHQ,gBAIDA,EAAOC,OAJN,+IAAH,sDA8BFC,EAAoB,SAAAC,GAC/B,MAAO,CAAE1C,KAAM+B,EAAqB9B,QAASyC,ICRhCC,EAtBF,WAAO,IAAD,EACc9E,aAAY,SAAAC,GAAK,OAAIA,EAAM8E,WAAlDC,EADS,EACTA,MAAOC,EADE,EACFA,YACT3C,EAAWC,cASjB,OAPA2C,qBAAU,WAIR,OAHKD,GACH3C,EDIJ,uCAAO,WAAMA,GAAN,eAAAkC,EAAA,+EAEoBF,EAAU,aAF9B,YAEGa,EAFH,iDAGkB7C,EAAS,CAAEH,KAAMgC,EAAc/B,QAAS+C,KAH1D,gHAAP,uDCFS,eACN,CAAC7C,EAAU2C,IAETD,GAA0B,IAAjBA,EAAM3D,OAGlB,cAAC,IAAD,CAAY+D,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAK5E,QAAQ,OAAOQ,EAAG,EAAvE,SACG4D,EAAMS,KAAI,SAAAC,GAAC,OACV,cAAC,EAAD,CAAiBxD,KAAMwD,GAAZA,EAAEjD,SALsB,cAAC,IAAD,CAAKkD,EAAE,IAAP,yBCmE5BC,EA1EQ,WAAO,IACpBb,EAAY/E,aAAY,SAAAC,GAAK,OAAIA,EAAM8E,WAAvCA,QACFzC,EAAWC,cACTtC,GAAU4F,eAAiB,IAA3B5F,MAEF6F,EAASC,cAkBf,OAVAb,qBAAU,WFgBuB,IAAAzC,EEf/B,GAAKqD,EAAOrD,GAMZ,OALA,OAAIxC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOiC,MACTI,EAASsC,EAAiB,OAAC3E,QAAD,IAACA,OAAD,EAACA,EAAOiC,OAElCI,GFW6BG,EEXAqD,EAAOrD,GFYxC,uCAAO,WAAMH,GAAN,eAAAkC,EAAA,+EAE0BF,EAAU,aAAD,OAAc7B,IAFjD,YAEGoC,EAFH,iDAGwBvC,EAASsC,EAAkBC,KAHnD,gHAAP,wDEVS,eACN,CAACiB,EAAOrD,GAAIH,EAAZ,OAAsBrC,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOiC,OAE3B6C,EAGH,cAAC,IAAD,CACEY,EAAE,IACFxF,UAAU,OACVwC,YAAY,MACZrB,aAAa,KACbsB,SAAS,SALX,SAOE,eAAC,IAAD,CAAYwC,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAK3E,QAAQ,OAAtD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKQ,EAAE,IAAP,SACE,cAAC,IAAD,CAAON,IAAKiE,EAAQhC,MAAO/B,IAAK+D,EAAQ/B,MAAOC,KAAK,YAGxD,eAAC,IAAD,CAAK7B,EAAE,IAAP,UACE,cAAC,IAAD,CAAK+B,EAAE,OAAOzC,WAAW,WAAzB,SACE,cAAC,IAAD,CACEhB,MAAM,WACN0D,WAAW,WACXC,cAAc,OACd9D,SAAS,KACT+D,cAAc,YALhB,SAOGyB,EAAQxB,aAIb,eAAC,IAAD,CAAKK,UAAU,OAAf,cAAwBmB,EAAQlB,SAChC,cAAC,IAAD,CAAKT,WAAW,WAAWI,GAAG,IAAI/B,GAAG,KAAKmC,UAAU,OAApD,2BAGA,cAAC,IAAD,CAAKA,UAAU,OAAOrE,SAAS,KAA/B,SACGwF,EAAQiB,cAEX,cAAC,IAAD,CACEpG,QArDmB,SAAAmE,GAC3BA,EAAEC,kBACFD,EAAEE,iBACF3B,EAASL,EAAc8C,KAmDfY,EAAG,EACHlG,QAAS,QACTwB,YAAa,OACb3B,KAAM,KALR,iCApCa,cAAC,IAAD,CAAKqG,EAAE,IAAP,yB,sECyIRM,GAjKQ,WACrB,IAAMC,EAAalG,aAAY,SAAAC,GAAK,OAAIA,EAAM8E,QAAQmB,cAChD5D,EAAWC,cACX4D,EAAUC,cAUVC,EAAmBC,KAAW,CAClCtD,MAAOsD,OAAaC,WACpB1C,MAAOyC,OAAaC,WACpBhD,SAAU+C,OAAaC,WACvBP,YAAaM,OAAaC,WAC1BxD,MAAOuD,OAAa/B,MAAMgC,aAc5B,OALArB,qBAAU,WAER,OADA5C,EHZF,uCAAO,WAAMA,GAAN,eAAAkC,EAAA,+EAEsBF,EAAU,wBAFhC,YAEG4B,EAFH,iDAIM5D,EAAS,CAAEH,KAAMiC,EAAwBhC,QAAS8D,KAJxD,gHAAP,uDGaS,eACN,CAAC5D,IAGF,cAAC,IAAD,CAAKnC,UAAU,OAAOwF,EAAG,OAAQa,MAAM,0BAAvC,SACE,cAAC,IAAD,CACEC,cA9BgB,CACpBzD,MAAO,GACPa,MAAO,GACPN,SAAU,GACVyC,YAAa,GACbjD,MAAO,IA0BH2D,SAfe,SAACC,EAAQC,GHkBH,IAAA7B,EGjBzB6B,EAAQC,eAAc,GACtBvE,GHgByByC,EGhBF4B,EHiBzB,uCAAO,WAAMrE,GAAN,SAAAkC,EAAA,+EAGsBC,MAAM,oCAAqC,CAClEqC,OAAQ,OACRC,KAAMC,KAAKC,UAAUlC,KALpB,uCAOIzC,EAAS,CAAEH,KAAMkC,EAAiBjC,QAAS2C,KAP/C,wFAAP,wDGhBEoB,EAAQe,KAAK,MAaTb,iBAAkBA,EAHpB,SAKG,SAAAvH,GAAK,OACJ,cAAC,IAAD,CAAMqI,YAAU,EAAhB,SACE,eAAC,IAAD,CAAQ/F,EAAG,EAAGuE,EAAE,IAAhB,UACE,cAAC,IAAD,CAAKvC,WAAW,WAAWI,GAAG,IAAI/B,GAAG,KAAKmC,UAAU,OAApD,yBAIA,cAAC,IAAD,CAAOwD,KAAK,QAAZ,SACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,eAAC,IAAD,CACEC,YAAU,EACVC,UAAWF,EAAKG,OAAOzE,OAASsE,EAAKI,QAAQ1E,MAF/C,UAIE,cAAC,IAAD,CAAW2E,QAAQ,QAAnB,yBACA,cAAC,IAAD,2BACMN,GADN,IAEElF,KAAK,OACLM,GAAG,QACHmF,YAAY,iBAEd,cAAC,IAAD,CACER,KAAK,QACLS,UAAWC,YAMnB,cAAC,IAAD,CAAOV,KAAK,QAAZ,SACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,eAAC,IAAD,CACEC,YAAU,EACVC,UAAWF,EAAKG,OAAO5D,OAASyD,EAAKI,QAAQ7D,MAF/C,UAIE,cAAC,IAAD,0BACA,cAAC,IAAD,aAAO1B,KAAK,SAASyF,YAAY,eAAkBP,IACnD,cAAC,IAAD,CACED,KAAK,QACLS,UAAWC,YAKnB,cAAC,IAAD,CAAOV,KAAK,WAAZ,SACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,eAAC,IAAD,CACEF,KAAK,WACLG,YAAU,EACVC,UAAWF,EAAKG,OAAOlE,UAAY+D,EAAKI,QAAQnE,SAHlD,UAKE,cAAC,IAAD,6BACA,cAAC,IAAD,yBAAQqE,YAAY,mBAAsBP,GAA1C,aACGnB,EAAWT,KAAI,SAAClC,EAAUwE,GAAX,OACd,iCAAqBxE,GAARwE,SAGjB,cAAC,IAAD,CACEX,KAAK,WACLS,UAAWC,YAKnB,cAAC,IAAD,CAAOV,KAAK,cAAZ,SACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,eAAC,IAAD,CACEF,KAAK,cACLG,YAAU,EACVC,UACEF,EAAKG,OAAOzB,aAAesB,EAAKI,QAAQ1B,YAJ5C,UAOE,cAAC,IAAD,gCACA,cAAC,IAAD,2BACMqB,GADN,IAEE5E,GAAG,cACHmF,YAAY,uBAEd,cAAC,IAAD,CACER,KAAK,cACLS,UAAWC,YAKnB,cAAC,IAAD,CAAOV,KAAK,QAAZ,SACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,eAAC,IAAD,CACEF,KAAK,QACLG,YAAU,EACVC,UAAWF,EAAKG,OAAO1E,OAASuE,EAAKI,QAAQ3E,MAH/C,UAKE,cAAC,IAAD,0BACA,cAAC,IAAD,aACEZ,KAAK,MACLyF,YAAY,mBACRP,IAGN,cAAC,IAAD,CACED,KAAK,QACLS,UAAWC,YAKnB,cAAC,IAAD,CACEtE,GAAI,EACJvC,YAAY,OACZkB,KAAK,SACL6F,UAAWlJ,EAAMmJ,aAJnB,oC,UCjFCC,GAlEF,WACX,IAAM5F,EAAWC,cACX4D,EAAUC,cACVrG,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,aAM5CoI,EAAa,SAACpE,EAAG7B,GACrB6B,EAAEC,kBACFD,EAAEE,iBACF3B,ENZ8B,SAAAJ,GAChC,MAAO,CAAEC,KAAMH,EAAuBI,QAASF,GMWpCkG,CAAmBlG,KAG9B,OAAyB,IAArBnC,EAAUsB,OAEV,cAAC,IAAD,UACE,cAAC,IAAD,CACEsE,EAAG,EACHpF,EAAE,OACF6C,WAAW,WACXC,cAAc,OACdO,UAAU,SALZ,iCAaJ,cAAC,IAAD,CAAK+B,EAAG,EAAGvE,EAAG,EAAd,SACE,eAAC,KAAD,CAAO3B,QAAQ,SAAf,UACE,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,gBACA,cAAC,KAAD,oBACA,cAAC,KAAD,oBACA,cAAC,KAAD,CAAI4I,WAAS,EAAb,mBACA,cAAC,KAAD,CAAIA,WAAS,EAAb,sBACA,cAAC,KAAD,0BAGJ,cAAC,KAAD,UACGtI,EAAU0F,KAAI,SAACvD,EAAM6F,GAAP,OACb,eAAC,KAAD,CAAkBnI,QAAS,SAAAmE,GAAC,OAxCX,SAACA,EAAG7B,GAC7BiE,EAAQe,KAAR,mBAAyBhF,EAAKO,KAuCU6F,CAAmBvE,EAAG7B,IAAtD,UACE,cAAC,KAAD,UAAK6F,EAAQ,IACb,cAAC,KAAD,UACE,cAAC,IAAD,CAAQzI,KAAM,KAAMwB,IAAKoB,EAAKa,MAAO/B,IAAKkB,EAAKc,UAEjD,cAAC,KAAD,UAAKd,EAAKc,QACV,eAAC,KAAD,CAAIqF,WAAS,EAAb,cACIE,WAAWrG,EAAK2B,MAAQ3B,EAAKsG,UAAUC,QAAQ,MAEnD,cAAC,KAAD,CAAIJ,WAAS,EAAb,SAAenG,EAAKsG,WACpB,cAAC,KAAD,UACE,cAAC,IAAD,CAAQ5I,QAAS,SAAAmE,GAAC,OAAIoE,EAAWpE,EAAG7B,IAApC,wBAXKA,EAAKO,e,iDC7CpBiG,GAAe,CACnB1D,MAAO,GACPkB,WAAY,GACZnB,QAAS,KACTE,aAAa,GCNTyD,GAAe,CAAE3I,UAAW,ICDrB4I,GAAcC,2BAAgB,CACzC7D,QFS6B,WAAmC,IAAlC9E,EAAiC,uDAAzByI,GAAcG,EAAW,uCAC/D,OAAQA,EAAO1G,MACb,KAAKgC,EACH,OAAO,2BAAKlE,GAAZ,IAAmB+E,MAAO6D,EAAOzG,QAAS6C,aAAa,IAEzD,KAAKZ,EACH,IAAMU,EAAO,aAAKtC,GAAIxC,EAAM+E,MAAM3D,OAAS,GAAMwH,EAAOzG,SACxD,OAAO,2BAAKnC,GAAZ,IAAmB+E,MAAM,CAAED,GAAH,oBAAe9E,EAAM+E,UAE/C,KAAKZ,EACH,OAAO,2BAAKnE,GAAZ,IAAmBiG,WAAY2C,EAAOzG,UAExC,KAAK8B,EACH,OAAO,2BAAKjE,GAAZ,IAAmB8E,QAAS8D,EAAOzG,UAErC,QACE,OAAO,eAAKnC,KExBhBC,KDC0B,WAAmC,IAAlCD,EAAiC,uDAAzByI,GAAcG,EAAW,uCAC5D,OAAQA,EAAO1G,MACb,KAAKJ,EACH,IAAMgG,EAAQ9H,EAAMF,UAAU+I,WAC5B,SAAA5G,GAAI,OAAIA,EAAKO,KAAOoG,EAAOzG,QAAQK,MAErC,GAAIsF,EAAQ,EACV,OAAO,2BACF9H,GADL,IAEEF,UAAU,GAAD,oBAAME,EAAMF,WAAZ,4BAA4B8I,EAAOzG,SAAnC,IAA4CoG,SAAU,QAGjE,IAAMxD,EAAQ/E,EAAMF,UAAUgJ,QAE9B,OADA/D,EAAM+C,GAAOS,UAAY,EAClB,2BACFvI,GADL,IAEEF,UAAWiF,IAIjB,KAAKhD,EACH,IAAMgD,EAAQ/E,EAAMF,UAAUiJ,QAAO,SAAAtD,GAAC,OAAIA,EAAEjD,KAAOoG,EAAOzG,QAAQK,MAClE,OAAO,2BAAKxC,GAAZ,IAAmBF,UAAWiF,IAEhC,QACE,OAAO,eAAK/E,O,oBEzBZgJ,GAAgB,CACpBC,IAAK,OACLC,cAGIC,GAAmBC,aAAeJ,GAAeN,IACnDW,GAAQC,uBACVH,GACAI,+BAAoBC,2BAAgBC,QAElCC,GAAYC,aAAaN,I,UCkCdO,OAtCf,WACE,OACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaQ,QAAS,KAAMH,UAAWA,GAAvC,SACE,cAAC,IAAD,CAAQI,SAAS,QAAjB,SACE,eAAC,IAAD,CAAgBC,MAAOA,QAAvB,UACE,cAAClK,EAAD,IACA,cAAC,IAAD,CACE8D,UAAU,SACVrE,SAAS,KACT2D,OAAO,qBACPsD,MAAM,MACNyD,GAAI,GACJ9I,GAAI,OACJ+I,GAAI,OAPN,SASE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,GAAD,qBC5BHC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKMQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAAC,GAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjB,MAAK,SAAAkB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,YClH5B1B,O","file":"static/js/main.c32a7a3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.034ef726.svg\";","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import {\n  Box,\n  Flex,\n  Avatar,\n  HStack,\n  Button,\n  VStack,\n  IconButton,\n} from '@chakra-ui/react';\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuDivider,\n} from '@chakra-ui/react';\nimport logo from '../logo.svg';\nimport { ColorModeSwitcher } from '../ColorModeSwitcher';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Icon } from '@chakra-ui/icons';\nimport { MdAdd, MdShoppingCart } from 'react-icons/md';\nimport { useSelector } from 'react-redux';\n\nexport default function NavBar() {\n  const cartItems = useSelector(state => state.cart.cartItems);\n\n  return (\n    <Box\n      boxShadow=\"base\"\n      px={4}\n      bg=\"teal.500\"\n      position=\"fixed\"\n      w=\"100vw\"\n      zIndex=\"1\"\n    >\n      <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n        <HStack spacing={8} alignItems={'center'}>\n          <Box>\n            <RouterLink to={'/'}>\n              <Avatar size={'sm'} src={logo} alt=\"demo cart\" />\n            </RouterLink>\n          </Box>\n        </HStack>\n        <Flex alignItems={'center'}>\n          <RouterLink to=\"/product/add\">\n            <Button\n              variant={'solid'}\n              colorScheme={'teal'}\n              size={'sm'}\n              leftIcon={<MdAdd />}\n            >\n              Add\n            </Button>\n          </RouterLink>\n          <RouterLink to={'/cart'}>\n            <IconButton\n              size=\"md\"\n              fontSize=\"lg\"\n              aria-label=\"cart\"\n              variant=\"ghost\"\n              ml={2}\n              p={0}\n            >\n              <VStack>\n                {cartItems.length > 0 && (\n                  <Box\n                    position=\"absolute\"\n                    borderRadius=\"50%\"\n                    right={-1}\n                    top={-1}\n                    p={1}\n                    bg=\"red\"\n                    color=\"white\"\n                    fontSize=\"10\"\n                  >\n                    {cartItems.length}\n                  </Box>\n                )}\n                <Icon as={MdShoppingCart} w={6} h={6} />\n              </VStack>\n            </IconButton>\n          </RouterLink>\n          <ColorModeSwitcher justifySelf=\"flex-end\" />\n          <Menu>\n            <MenuButton\n              as={Button}\n              rounded={'full'}\n              variant={'link'}\n              cursor={'pointer'}\n              aria-label=\"Profile\"\n            >\n              <Avatar\n                size={'sm'}\n                src={\n                  'https://images.unsplash.com/photo-1493666438817-866a91353ca9?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\n                }\n                alt=\"user\"\n              />\n            </MenuButton>\n            <MenuList>\n              <MenuItem>Link 1</MenuItem>\n              <MenuItem>Link 2</MenuItem>\n              <MenuDivider />\n              <MenuItem>Link 3</MenuItem>\n            </MenuList>\n          </Menu>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}\n","export const ADD_ITEM_TO_CART = 'Add item to cart';\nexport const DELETE_ITEM_FROM_CART = 'Delete item from cart';\n\nexport const addItemToCart = item => {\n  return { type: ADD_ITEM_TO_CART, payload: item };\n};\n\nexport const deleteItemFromCart = item => {\n  return { type: DELETE_ITEM_FROM_CART, payload: item };\n};\n","import React from 'react';\nimport { Flex, Box, Image, Center, Tooltip, Button } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from '@chakra-ui/icons';\nimport { MdShoppingCart } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { addItemToCart } from './../actions/cart.actions';\n\nconst Item = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const addItemToCartHandler = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    dispatch(addItemToCart(item));\n  };\n\n  return (\n    <Link to={{ pathname: `/product/${item.id}`, state: { item } }}>\n      <Box\n        boxShadow=\"base\"\n        maxW=\"sm\"\n        borderWidth=\"1px\"\n        borderRadius=\"lg\"\n        overflow=\"hidden\"\n      >\n        <Box p=\"6\">\n          <Center>\n            <Image\n              _hover={{ transform: `scale(1.1)` }}\n              src={item.image}\n              alt={item.title}\n              maxH=\"400\"\n              height=\"400\"\n            />\n          </Center>\n        </Box>\n\n        <Box p=\"6\">\n          <Box d=\"flex\" alignItems=\"baseline\">\n            <Box\n              color=\"gray.500\"\n              fontWeight=\"semibold\"\n              letterSpacing=\"wide\"\n              fontSize=\"xs\"\n              textTransform=\"uppercase\"\n            >\n              {item.category}\n            </Box>\n          </Box>\n\n          <Box\n            mt=\"1\"\n            fontWeight=\"semibold\"\n            as=\"h4\"\n            lineHeight=\"tight\"\n            isTruncated\n            whiteSpace=\"wrap\"\n            textAlign=\"left\"\n          >\n            {item.title}\n          </Box>\n          <Flex justifyContent=\"space-between\">\n            <Box textAlign=\"left\">${item.price}</Box>\n            <Tooltip label=\"Add to Cart\" fontSize=\"md\">\n              <Button variant=\"ghost\" p={2} onClick={addItemToCartHandler}>\n                <Icon as={MdShoppingCart} w={6} h={6} />\n              </Button>\n            </Tooltip>\n          </Flex>\n        </Box>\n      </Box>\n    </Link>\n  );\n};\n\nexport default Item;\n","export const SET_PRODUCT_DETAILS = 'Set product details';\nexport const SET_PRODUCTS = 'Set products';\nexport const SET_PRODUCT_CATAGORIES = 'Set product categories';\nexport const ADD_NEW_PRODUCT = 'Add new product';\n\nconst fetchData = async url => {\n  const BASE_URL = 'https://fakestoreapi.com';\n  try {\n    const result = await fetch(`${BASE_URL}${url}`);\n    return await result.json();\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchProducts = () => {\n  return async dispatch => {\n    try {\n      const products = await fetchData('/products');\n      if (products) return dispatch({ type: SET_PRODUCTS, payload: products });\n    } catch (error) {}\n  };\n};\n\nexport const fetchCategories = () => {\n  return async dispatch => {\n    try {\n      const categories = await fetchData('/products/categories');\n      if (categories) {\n        return dispatch({ type: SET_PRODUCT_CATAGORIES, payload: categories });\n      }\n    } catch (error) {}\n  };\n};\n\nexport const setProductDetails = productDetails => {\n  return { type: SET_PRODUCT_DETAILS, payload: productDetails };\n};\n\nexport const fetchProductDetails = id => {\n  return async dispatch => {\n    try {\n      const productDetails = await fetchData(`/products/${id}`);\n      if (productDetails) return dispatch(setProductDetails(productDetails));\n    } catch (error) {}\n  };\n};\n\nexport const addNewProduct = product => {\n  return async dispatch => {\n    try {\n      // eslint-disable-next-line no-unused-vars\n      const newProduct = await fetch('https://fakestoreapi.com/products', {\n        method: 'POST',\n        body: JSON.stringify(product),\n      });\n      return dispatch({ type: ADD_NEW_PRODUCT, payload: product });\n    } catch (error) {}\n  };\n};\n","import React, { useEffect } from 'react';\nimport { SimpleGrid, Box } from '@chakra-ui/react';\nimport Item from './Item';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProducts } from './../actions/product.actions';\n\nconst Home = () => {\n  const { items, itemsLoaded } = useSelector(state => state.product);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!itemsLoaded) {\n      dispatch(fetchProducts());\n    }\n    return () => {};\n  }, [dispatch, itemsLoaded]);\n\n  if (!items || items.length === 0) return <Box m=\"3\">loading...</Box>;\n\n  return (\n    <SimpleGrid columns={{ sm: 1, md: 2, lg: 3, xl: 4 }} spacing=\"40px\" p={3}>\n      {items.map(i => (\n        <Item key={i.id} item={i}></Item>\n      ))}\n    </SimpleGrid>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Box, Image, Button, SimpleGrid, Center } from '@chakra-ui/react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchProductDetails,\n  setProductDetails,\n} from '../actions/product.actions';\nimport { addItemToCart } from './../actions/cart.actions';\n\nconst ProductDetails = () => {\n  const { product } = useSelector(state => state.product);\n  const dispatch = useDispatch();\n  const { state } = useLocation() || {};\n\n  const params = useParams();\n\n  const addItemToCartHandler = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    dispatch(addItemToCart(product));\n  };\n\n  useEffect(() => {\n    if (!params.id) return;\n    if (state?.item) {\n      dispatch(setProductDetails(state?.item));\n    } else {\n      dispatch(fetchProductDetails(params.id));\n    }\n    return () => {};\n  }, [params.id, dispatch, state?.item]);\n\n  if (!product) return <Box m=\"3\">loading...</Box>;\n\n  return (\n    <Box\n      m=\"3\"\n      boxShadow=\"base\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n    >\n      <SimpleGrid columns={{ sm: 1, md: 2, lg: 2 }} spacing=\"40px\">\n        <Center>\n          <Box p=\"6\">\n            <Image src={product.image} alt={product.title} maxH=\"400\" />\n          </Box>\n        </Center>\n        <Box p=\"6\">\n          <Box d=\"flex\" alignItems=\"baseline\">\n            <Box\n              color=\"gray.500\"\n              fontWeight=\"semibold\"\n              letterSpacing=\"wide\"\n              fontSize=\"xs\"\n              textTransform=\"uppercase\"\n            >\n              {product.category}\n            </Box>\n          </Box>\n\n          <Box textAlign=\"left\">${product.price}</Box>\n          <Box fontWeight=\"semibold\" mt=\"1\" as=\"h2\" textAlign=\"left\">\n            Product Info:\n          </Box>\n          <Box textAlign=\"left\" fontSize=\"md\">\n            {product.description}\n          </Box>\n          <Button\n            onClick={addItemToCartHandler}\n            m={3}\n            variant={'solid'}\n            colorScheme={'teal'}\n            size={'sm'}\n          >\n            Add to Cart\n          </Button>\n        </Box>\n      </SimpleGrid>\n    </Box>\n  );\n};\n\nexport default ProductDetails;\n","import React, { useEffect } from 'react';\nimport { VStack, Input, Button, Select, Textarea, Box } from '@chakra-ui/react';\nimport { FormControl, FormLabel, FormErrorMessage } from '@chakra-ui/react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchCategories, addNewProduct } from './../actions/product.actions';\nimport { useHistory } from 'react-router';\n\nconst ProductAddEdit = () => {\n  const categories = useSelector(state => state.product.categories);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const initialValues = {\n    title: '',\n    price: '',\n    category: '',\n    description: '',\n    image: '',\n  };\n\n  const validationSchema = yup.object({\n    title: yup.string().required(),\n    price: yup.number().required(),\n    category: yup.string().required(),\n    description: yup.string().required(),\n    image: yup.string().url().required(),\n  });\n\n  const onFormSubmit = (values, actions) => {\n    actions.setSubmitting(false);\n    dispatch(addNewProduct(values));\n    history.push('/');\n  };\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n    return () => {};\n  }, [dispatch]);\n\n  return (\n    <Box boxShadow=\"base\" m={'auto'} width=\"clamp(300px, 60%, 100%)\">\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onFormSubmit}\n        validationSchema={validationSchema}\n      >\n        {props => (\n          <Form noValidate>\n            <VStack p={3} m=\"3\">\n              <Box fontWeight=\"semibold\" mt=\"1\" as=\"h2\" textAlign=\"left\">\n                Add Product\n              </Box>\n\n              <Field name=\"title\">\n                {({ field, form }) => (\n                  <FormControl\n                    isRequired\n                    isInvalid={form.errors.title && form.touched.title}\n                  >\n                    <FormLabel htmlFor=\"title\">Enter Title</FormLabel>\n                    <Input\n                      {...field}\n                      type=\"text\"\n                      id=\"title\"\n                      placeholder=\"Enter Title\"\n                    />\n                    <ErrorMessage\n                      name=\"title\"\n                      component={FormErrorMessage}\n                    ></ErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n\n              <Field name=\"price\">\n                {({ field, form }) => (\n                  <FormControl\n                    isRequired\n                    isInvalid={form.errors.price && form.touched.price}\n                  >\n                    <FormLabel>Enter price</FormLabel>\n                    <Input type=\"number\" placeholder=\"Enter price\" {...field} />\n                    <ErrorMessage\n                      name=\"price\"\n                      component={FormErrorMessage}\n                    ></ErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n              <Field name=\"category\">\n                {({ field, form }) => (\n                  <FormControl\n                    name=\"category\"\n                    isRequired\n                    isInvalid={form.errors.category && form.touched.category}\n                  >\n                    <FormLabel>Enter category</FormLabel>\n                    <Select placeholder=\"Select category\" {...field}>\n                      {categories.map((category, index) => (\n                        <option key={index}>{category}</option>\n                      ))}\n                    </Select>\n                    <ErrorMessage\n                      name=\"category\"\n                      component={FormErrorMessage}\n                    ></ErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n              <Field name=\"description\">\n                {({ field, form }) => (\n                  <FormControl\n                    name=\"description\"\n                    isRequired\n                    isInvalid={\n                      form.errors.description && form.touched.description\n                    }\n                  >\n                    <FormLabel>Enter description</FormLabel>\n                    <Textarea\n                      {...field}\n                      id=\"description\"\n                      placeholder=\"Enter description\"\n                    ></Textarea>\n                    <ErrorMessage\n                      name=\"description\"\n                      component={FormErrorMessage}\n                    ></ErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n              <Field name=\"image\">\n                {({ field, form }) => (\n                  <FormControl\n                    name=\"image\"\n                    isRequired\n                    isInvalid={form.errors.image && form.touched.image}\n                  >\n                    <FormLabel>Enter image</FormLabel>\n                    <Input\n                      type=\"url\"\n                      placeholder=\"Enter image url\"\n                      {...field}\n                    />\n\n                    <ErrorMessage\n                      name=\"image\"\n                      component={FormErrorMessage}\n                    ></ErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n              <Button\n                mt={4}\n                colorScheme=\"teal\"\n                type=\"submit\"\n                isLoading={props.isSubmitting}\n              >\n                Add Product\n              </Button>\n            </VStack>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default ProductAddEdit;\n","import React from 'react';\nimport { Table, Thead, Tbody, Tr, Td, Th } from '@chakra-ui/react';\nimport { Box, Avatar, Flex, Button } from '@chakra-ui/react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteItemFromCart } from '../actions/cart.actions';\nimport { useHistory } from 'react-router-dom';\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const cartItems = useSelector(state => state.cart.cartItems);\n\n  const viewProductDetails = (e, item) => {\n    history.push(`/product/${item.id}`);\n  };\n\n  const deleteItem = (e, item) => {\n    e.stopPropagation();\n    e.preventDefault();\n    dispatch(deleteItemFromCart(item));\n  };\n\n  if (cartItems.length === 0) {\n    return (\n      <Flex>\n        <Box\n          m={4}\n          w=\"100%\"\n          fontWeight=\"semibold\"\n          letterSpacing=\"wide\"\n          textAlign=\"center\"\n        >\n          You cart empty :(\n        </Box>\n      </Flex>\n    );\n  }\n  return (\n    <Box m={3} p={3}>\n      <Table variant=\"simple\">\n        <Thead>\n          <Tr>\n            <Th>#</Th>\n            <Th>Image</Th>\n            <Th>Title</Th>\n            <Th isNumeric>Price</Th>\n            <Th isNumeric>Quantity</Th>\n            <Th>Action</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {cartItems.map((item, index) => (\n            <Tr key={item.id} onClick={e => viewProductDetails(e, item)}>\n              <Td>{index + 1}</Td>\n              <Td>\n                <Avatar size={'sm'} src={item.image} alt={item.title} />\n              </Td>\n              <Td>{item.title}</Td>\n              <Td isNumeric>\n                ${parseFloat(item.price * item.quantity).toFixed(2)}\n              </Td>\n              <Td isNumeric>{item.quantity}</Td>\n              <Td>\n                <Button onClick={e => deleteItem(e, item)}>Delete</Button>\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </Table>\n    </Box>\n  );\n};\n\nexport default Cart;\n","import {\n  SET_PRODUCT_DETAILS,\n  SET_PRODUCTS,\n  SET_PRODUCT_CATAGORIES,\n  ADD_NEW_PRODUCT,\n} from './../actions/product.actions';\n\nconst initialState = {\n  items: [],\n  categories: [],\n  product: null,\n  itemsLoaded: false,\n};\n\nexport const productRenducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PRODUCTS: {\n      return { ...state, items: action.payload, itemsLoaded: true };\n    }\n    case ADD_NEW_PRODUCT: {\n      const product = { id: state.items.length + 1, ...action.payload };\n      return { ...state, items: [product, ...state.items] };\n    }\n    case SET_PRODUCT_CATAGORIES: {\n      return { ...state, categories: action.payload };\n    }\n    case SET_PRODUCT_DETAILS: {\n      return { ...state, product: action.payload };\n    }\n    default:\n      return { ...state };\n  }\n};\n","import {\n  ADD_ITEM_TO_CART,\n  DELETE_ITEM_FROM_CART,\n} from './../actions/cart.actions';\n\nconst initialState = { cartItems: [] };\n\nexport const cartRenducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_ITEM_TO_CART: {\n      const index = state.cartItems.findIndex(\n        item => item.id === action.payload.id\n      );\n      if (index < 0) {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, { ...action.payload, quantity: 1 }],\n        };\n      } else {\n        const items = state.cartItems.slice();\n        items[index].quantity += 1;\n        return {\n          ...state,\n          cartItems: items,\n        };\n      }\n    }\n    case DELETE_ITEM_FROM_CART: {\n      const items = state.cartItems.filter(i => i.id !== action.payload.id);\n      return { ...state, cartItems: items };\n    }\n    default:\n      return { ...state };\n  }\n};\n","import { combineReducers } from 'redux';\nimport { productRenducer } from './productReducer';\nimport { cartRenducer } from './cartReducer';\n\nexport const rootReducer = combineReducers({\n  product: productRenducer,\n  cart: cartRenducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { rootReducer } from '../reducers';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nlet store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\nlet persistor = persistStore(store);\nexport { store, persistor };\n","import React from 'react';\nimport { ChakraProvider, Box, theme } from '@chakra-ui/react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/Navbar';\nimport Home from './components/Home';\nimport ProductDetails from './components/ProductDetails';\nimport ProductAddEdit from './components/ProductAddEdit';\nimport Cart from './components/Cart';\n\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router hashType=\"slash\">\n          <ChakraProvider theme={theme}>\n            <NavBar />\n            <Box\n              textAlign=\"center\"\n              fontSize=\"xl\"\n              height=\"calc(100vh - 64px)\"\n              width=\"90%\"\n              pt={16}\n              ml={'auto'}\n              mr={'auto'}\n            >\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route exact path=\"/product/add\">\n                  <ProductAddEdit />\n                </Route>\n                <Route exact path=\"/product/:id\">\n                  <ProductDetails />\n                </Route>\n                <Route exact path=\"/cart\">\n                  <Cart />\n                </Route>\n              </Switch>\n            </Box>\n          </ChakraProvider>\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}