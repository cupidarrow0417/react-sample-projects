{"version":3,"sources":["graphql/index.js","components/Home/Pokemon.js","components/Home/PokemonListContainer.js","components/Home/index.js","components/PokemonDetail.js","reducer/index.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["GET_POKEMONS","gql","GET_POKEMON_DETAILS","Pokemon","pokemon","britishNumberFormatter","Intl","NumberFormat","className","name","format","maxHP","maxCP","src","image","alt","loading","attacks","special","slice","map","attack","damage","PokemonListContainer","pokemons","useSelector","state","to","pathname","id","Home","dispatch","useDispatch","useQuery","variables","first","error","data","type","payload","PokemonDetail","pokemonDetail","params","useParams","history","useHistory","useLocation","useLazyQuery","getPokemonDetails","useEffect","onClick","goBack","classification","resistant","index","weaknesses","join","fast","f","s","initialState","store","createStore","action","composeWithDevTools","App","client","ApolloClient","uri","cache","InMemoryCache","hashType","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb94f6a.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_POKEMONS = gql`\n  query pokemons($first: Int!) {\n    pokemons(first: $first) {\n      id\n      number\n      name\n      weight {\n        minimum\n        maximum\n      }\n      height {\n        minimum\n        maximum\n      }\n      classification\n      types\n      resistant\n      attacks {\n        fast {\n          name\n          type\n          damage\n        }\n        special {\n          name\n          type\n          damage\n        }\n      }\n      weaknesses\n      fleeRate\n      maxCP\n      evolutions {\n        id\n      }\n      evolutionRequirements {\n        amount\n        name\n      }\n      maxHP\n      image\n    }\n  }\n`;\n\nexport const GET_POKEMON_DETAILS = gql`\n  query pokemon($id: String!) {\n    pokemon(id: $id) {\n      id\n      number\n      name\n      weight {\n        minimum\n        maximum\n      }\n      height {\n        minimum\n        maximum\n      }\n      classification\n      types\n      resistant\n      attacks {\n        fast {\n          name\n          type\n          damage\n        }\n        special {\n          name\n          type\n          damage\n        }\n      }\n      weaknesses\n      fleeRate\n      maxCP\n      evolutions {\n        id\n      }\n      evolutionRequirements {\n        amount\n        name\n      }\n      maxHP\n      image\n    }\n  }\n`;\n","import React from 'react';\n\nexport const Pokemon = ({ pokemon }) => {\n  const britishNumberFormatter = new Intl.NumberFormat('en-GB');\n\n  return (\n    <div className=\"pokemon\">\n      <div className=\"pokemon__name\">\n        <p>{pokemon.name}</p>\n      </div>\n      <div className=\"pokemon__meta\">\n        <span>{britishNumberFormatter.format(pokemon.maxHP)}</span>\n        <span>{britishNumberFormatter.format(pokemon.maxCP)}</span>\n      </div>\n      <div className=\"pokemon__image\">\n        <img src={pokemon.image} alt={pokemon.name} loading=\"lazy\" />\n      </div>\n      <div className=\"pokemon__attacks\">\n        {pokemon?.attacks?.special.slice(0, 3).map((attack) => (\n          <span key={`${attack.name}-${attack.damage}`}>{attack.name}</span>\n        ))}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport { Pokemon } from './Pokemon';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport const PokemonListContainer = () => {\n  const pokemons = useSelector((state) => state.pokemons);\n  return (\n    <>\n      {pokemons?.map((pokemon) => (\n        <Link\n          key={pokemon.id}\n          to={{ pathname: `/pokemon/${pokemon.id}`, state: { pokemon } }}\n        >\n          <Pokemon pokemon={pokemon} />\n        </Link>\n      ))}\n    </>\n  );\n};\n\nexport default PokemonListContainer;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_POKEMONS } from '../../graphql';\nimport { PokemonListContainer } from './PokemonListContainer';\nimport { useDispatch } from 'react-redux';\n\nexport const Home = () => {\n  const dispatch = useDispatch();\n  const { loading, error, data } = useQuery(GET_POKEMONS, {\n    variables: { first: 100 },\n  });\n\n  if (loading) return <p>Loading ...</p>;\n  if (error) return <pre>{error}</pre>;\n  if (data) {\n    dispatch({ type: 'SET_POKEMONS', payload: data.pokemons });\n  }\n  return (\n    <div className=\"container pokemons\">\n      <PokemonListContainer />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { GET_POKEMON_DETAILS } from '../graphql';\n\nexport const PokemonDetail = () => {\n  const dispatch = useDispatch();\n  const pokemonDetail = useSelector((state) => state.pokemonDetail) || {};\n  const britishNumberFormatter = new Intl.NumberFormat('en-GB');\n  const params = useParams();\n  const history = useHistory();\n  const { state } = useLocation();\n\n  const [getPokemonDetails, { loading, error, data }] = useLazyQuery(\n    GET_POKEMON_DETAILS,\n    {\n      variables: { id: params.id },\n    },\n  );\n\n  useEffect(() => {\n    if (state && state?.pokemon) {\n      dispatch({ type: 'SET_POKEMON_DETAILS', payload: state.pokemon });\n    } else if (params.id) {\n      getPokemonDetails();\n    }\n    return () => {};\n  }, [dispatch, getPokemonDetails, state, params.id]);\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  if (loading) return <p>Loading ...</p>;\n  if (error) return <pre>{error}</pre>;\n\n  if (data) {\n    dispatch({ type: 'SET_POKEMON_DETAILS', payload: data.pokemon });\n  }\n\n  return (\n    <div className=\"pokemondetail\">\n      <button onClick={goBack}> Back</button>\n      <div className=\"pokemon\">\n        <div className=\"pokemon__name\">\n          <h1>{pokemonDetail.name}</h1>\n        </div>\n        <h4>Classification: {pokemonDetail.classification}</h4>\n        <div className=\"pokemon__meta\">\n          <span>\n            maxHP: {britishNumberFormatter.format(pokemonDetail.maxHP)} &nbsp;\n          </span>\n          <span>\n            maxCP: {britishNumberFormatter.format(pokemonDetail.maxCP)}\n          </span>\n        </div>\n        <br />\n        <div className=\"pokemon__image\">\n          <img src={pokemonDetail.image} alt={pokemonDetail.name} />\n        </div>\n        <h1>Resistant</h1>\n        <div className=\"pokemon__attacks\">\n          {pokemonDetail?.resistant?.map((resistant, index) => (\n            <span key={index}>{resistant} </span>\n          ))}\n        </div>\n        <h1>Weaknesses</h1>\n        <div className=\"pokemon__attacks\">\n          {pokemonDetail?.weaknesses?.join(', ')}\n        </div>\n        <h1>Attacks</h1>\n        <div className=\"pokemon__attacks\">\n          <p>{pokemonDetail?.attacks?.fast.map((f) => f.name).join(', ')}</p>\n          <p>{pokemonDetail?.attacks?.special.map((s) => s.name).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","const initialState = { pokemons: [], pokemonDetail: null };\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_POKEMONS':\n      return { ...state, pokemons: action.payload };\n    case 'SET_POKEMON_DETAILS':\n      return { ...state, pokemonDetail: action.payload };\n    default:\n      return { ...state };\n  }\n};\n","import { createStore } from 'redux';\nimport { rootReducer } from './../reducer/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const store = createStore(rootReducer, composeWithDevTools());\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Home } from './components/Home';\nimport { PokemonDetail } from './components/PokemonDetail';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport './App.css';\n\nfunction App() {\n  const client = new ApolloClient({\n    uri: 'https://graphql-pokemon2.vercel.app/',\n    cache: new InMemoryCache(),\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <Router hashType=\"slash\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/pokemon/:id\">\n              <PokemonDetail />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}