{"version":3,"sources":["AppContextProvider.js","Components/Header/Header.js","Components/PlayListView/PlayListView.js","config.js","Components/AudioPlayer.js","Components/VolumeControl/VolumeControl.js","Components/Tracker/Tracker.js","Components/SongInfo/SongInfo.js","Components/PlayerActions/PlayerActions.js","Components/PlayerView/PlayerView.js","App.js","musicService.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","cover","appState","playList","currentSong","isSongPlaying","currentView","playerVolume","isVolumeControl","volumeIcon","action","playerReducer","state","type","idx","findIndex","s","name","length","loopSongs","index","getRandomIndex","songs","parseInt","Math","random","payload","song","Error","AppContextProvider","children","useReducer","dispatch","Provider","value","useAppContext","context","useContext","undefined","Header","Heading","className","title","onClick","PlayListView","album","map","key","playSelectedSong","artist","playlistsongs","timeoutHandle","AudioPlayer","memo","props","audioInfo","createRef","audioRef","useRef","audioFile","currentSongName","getDOMNode","current","handleTimeUpdate","currentTime","duration","isNaN","onTimeUpdate","trackDuration","handleMediaEnd","onEnd","updateIsPlaying","node","isPlaying","play","pause","setAudioInfo","getAudioInfo","useEffect","songName","paused","readyState","load","updateSource","defaultTime","updateCurrentTime","addEventListener","removeEventListener","volume","ref","src","Tracker","useState","tracker","setTrack","e","songDuration","parseFloat","toFixed","w","progress","console","log","$event","d","Number","round","pageX","id","style","width","SongInfo","href","VolumeControl","setVolume","icon","setTimeout","onMouseEnter","clearTimeout","onMouseLeave","min","max","step","onChange","target","PlayerActions","isRandomSongs","PlayerView","alt","App","navHeading","setHeading","document","querySelector","Promise","resolve","reject","script","createElement","onload","body","appendChild","then","playlist","processData","window","ID3","loadTags","tags","getAllTags","temp","push","getSongInfo","Object","keys","setData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0f515229.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nconst AppContext = createContext();\nconst cover = 'assets/images/covers/RaceGurramFront.jpg';\nconst appState = {\n  playList: [],\n  currentSong: {},\n  isSongPlaying: false,\n  cover,\n  currentView: 'musicPlayer',\n  playerVolume: 0.4,\n  isVolumeControl: false,\n  volumeIcon: 'fa-volume-down',\n  action: '',\n};\nconst getRandomIndex = (songs = []) => {\n  var index = parseInt(Math.random() * 10);\n  if (index >= 0 && index < songs.length) {\n    return index;\n  } else {\n    getRandomIndex(songs);\n  }\n};\n\nfunction playerReducer(state, action) {\n  switch (action.type) {\n    case 'play': {\n      return { ...state, isSongPlaying: true, action: action.type };\n    }\n    case 'pause': {\n      return { ...state, isSongPlaying: false, action: action.type };\n    }\n    case 'previous': {\n      const idx = state.playList.findIndex(\n        (s) => s.name === state.currentSong.name,\n      );\n      let currentSong = {};\n      if (idx <= 0) {\n        currentSong = state.playList[state.playList.length - 1];\n      } else {\n        currentSong =\n          idx > 0 && idx <= state.playList.length - 1\n            ? state.playList[idx - 1]\n            : state.currentSong;\n      }\n      return { ...state, currentSong: { ...currentSong, cover } };\n    }\n    case 'next': {\n      let currentSong = {};\n      let idx = state.playList.findIndex(\n        (s) => s.name === state.currentSong.name,\n      );\n\n      if (state.loopSongs !== 'This') {\n        idx = idx + 1; //index || idx + 1;\n      }\n      if (state.loopSongs === 'Loop') {\n        currentSong = state.playList[idx];\n      } else if (idx < state.playList.length - 1) {\n        currentSong = state.playList[idx];\n      } else {\n        currentSong = state.playList[0];\n      }\n      return { ...state, currentSong: { ...currentSong, cover } };\n    }\n    case 'random': {\n      const index = getRandomIndex(state.playList) || 0;\n      return { ...state, currentSong: { ...state.playList[index], cover } };\n    }\n    case 'setSongs': {\n      const playList = action.payload;\n      return { ...state, playList };\n    }\n    case 'setCurrentSong': {\n      const currentSong = action.payload;\n      return { ...state, currentSong: { ...currentSong, cover } };\n    }\n    case 'setCurrentView': {\n      const { currentView } = action.payload;\n      return { ...state, currentView };\n    }\n    case 'playSong': {\n      const { song } = action.payload;\n      return {\n        ...state,\n        currentView: 'musicPlayer',\n        currentSong: { ...song, cover },\n        isSongPlaying: false,\n      };\n    }\n    case 'setVolume': {\n      const { playerVolume, volumeIcon } = action.payload;\n\n      return {\n        ...state,\n        playerVolume,\n        volumeIcon,\n      };\n    }\n    case 'showVolumeControl': {\n      const { isVolumeControl } = action.payload;\n      return { ...state, isVolumeControl };\n    }\n    case 'setLoopSongs': {\n      let loopSongs;\n      if (state.loopSongs === 'Once') {\n        loopSongs = 'Loop';\n      } else if (state.loopSongs === 'Loop') {\n        loopSongs = 'This';\n      } else if (state.loopSongs === 'This') {\n        loopSongs = 'Once';\n      }\n      return { ...state, loopSongs };\n    }\n\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction AppContextProvider({ children }) {\n  const [state, dispatch] = useReducer(playerReducer, appState);\n  return (\n    <AppContext.Provider value={{ dispatch, state }}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nfunction useAppContext() {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useAppContext must be used within a AppContextProvider');\n  }\n  return context;\n}\n\nexport { AppContextProvider, AppContext, useAppContext };\n","import React from 'react';\nimport { useAppContext } from '../../AppContextProvider';\nimport './Header.css';\n\nexport const Header = ({ Heading }) => {\n  const { state, dispatch } = useAppContext();\n\n  return (\n    <div className=\"top-nav\">\n      {state.currentView !== 'musicPlayer' && (\n        <label\n          title=\"back\"\n          onClick={() =>\n            dispatch({\n              type: 'setCurrentView',\n              payload: { currentView: 'musicPlayer' },\n            })\n          }\n        >\n          <i className=\"fas fa-long-arrow-alt-left\"></i>\n        </label>\n      )}\n      <span className=\"title\">{Heading}</span>\n      {state.currentView === 'musicPlayer' && (\n        <label\n          title=\"Play List\"\n          className=\"list-songs\"\n          onClick={() =>\n            dispatch({\n              type: 'setCurrentView',\n              payload: { currentView: 'PlayList' },\n            })\n          }\n        >\n          <i className=\"fas fa-list\"></i>\n        </label>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useAppContext } from '../../AppContextProvider';\nimport './PlayListView.css';\n\nexport const PlayListView = ({\n  album,\n  currentSong,\n  isSongPlaying,\n  className,\n}) => {\n  const { dispatch } = useAppContext();\n  const playSelectedSong = (song) => {\n    dispatch({ type: 'playSong', payload: { song } });\n  };\n  return (\n    <div className={`${className} player-back`}>\n      <div className=\"play-list\">\n        <ul>\n          {album.map((song, index) => (\n            <li\n              key={index}\n              className={\n                currentSong.name === song.name && isSongPlaying\n                  ? 'song-item active'\n                  : 'song-item'\n              }\n              onClick={() => playSelectedSong(song)}\n            >\n              <div className=\"info\">\n                <p className=\"song-title\">{song.name}</p>\n                <p className=\"artist\">{song.artist}</p>\n              </div>\n              <div className=\"status\">\n                {currentSong.name === song.name && isSongPlaying && (\n                  <i className=\"fa fa-signal\" title=\"Playing\"></i>\n                )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","export const cover = 'assets/images/covers/RaceGurramFront.jpg';\nexport const playlistsongs = [\n  {\n    name: '01 - Boochade Boochade.mp3',\n    cover,\n  },\n  {\n    name: '02 - Gala Gala.mp3',\n    cover,\n  },\n  {\n    name: '03 - Cinema Choopistha Mava.mp3',\n    cover,\n  },\n  {\n    name: '04 - Sweety.mp3',\n    cover,\n  },\n  {\n    name: '05 - Down Down.mp3',\n    cover,\n  },\n  {\n    name: '06 - Race Gurram.mp3',\n    cover,\n  },\n];\n","import React, { useRef, createRef, memo, useEffect } from 'react';\n\nfunction AudioPlayerComp(props) {\n  const audioInfo = createRef(null);\n  const audioRef = useRef(null);\n  const audioFile = 'assets/media/' + props.currentSongName;\n\n  const getDOMNode = () => {\n    return audioRef?.current;\n  };\n\n  const handleTimeUpdate = () => {\n    const { currentTime, duration } = getDOMNode();\n    if (isNaN(duration)) return;\n    props.onTimeUpdate({\n      currentTime,\n      trackDuration: duration,\n    });\n  };\n\n  const handleMediaEnd = () => {\n    getDOMNode().currentTime = 0;\n    props.onEnd();\n  };\n\n  const updateCurrentTime = () => {\n    const node = getDOMNode();\n    if (node.readyState) {\n      node.currentTime = props.defaultTime;\n    }\n  };\n\n  const updateIsPlaying = () => {\n    const node = getDOMNode();\n\n    if (props.isPlaying) {\n      node.play();\n    } else {\n      node.pause();\n    }\n  };\n\n  const updateSource = () => {\n    const node = getDOMNode();\n\n    if (node.paused === false && node.readyState) {\n      node.pause(); //pause if playing\n    }\n    props.onTimeUpdate({\n      currentTime: 0,\n      trackDuration: node.duration,\n    });\n\n    node.load();\n    if (props.isPlaying) {\n      node.readyState && node.play();\n    }\n  };\n  const setAudioInfo = (key, value) => {\n    if (audioInfo.current) {\n      audioInfo.current[key] = value;\n    } else {\n      audioInfo.current = {\n        ...audioInfo.current,\n        [key]: value,\n      };\n    }\n  };\n\n  const getAudioInfo = () => {\n    return audioInfo?.current || {};\n  };\n\n  useEffect(() => {\n    // console.log(props);\n    if (getAudioInfo()?.songName !== props.currentSongName) {\n      updateSource();\n      setAudioInfo('songName', props.currentSongName);\n    }\n    if (getAudioInfo()?.isPlaying !== props.isPlaying) {\n      updateIsPlaying();\n      setAudioInfo('isPlaying', props.isPlaying);\n    }\n    if (getAudioInfo()?.defaultTime !== props.defaultTime) {\n      updateCurrentTime();\n      setAudioInfo('defaultTime', props.defaultTime);\n    } else {\n      const node = getDOMNode();\n      node.addEventListener('timeupdate', handleTimeUpdate);\n      node.addEventListener('ended', handleMediaEnd);\n\n      updateIsPlaying();\n    }\n    return () => {\n      const node = getDOMNode();\n      node.removeEventListener('timeupdate', handleTimeUpdate);\n      node.removeEventListener('ended', handleMediaEnd);\n    };\n  }, [props.isPlaying, props.defaultTime, props.songName, props.volume]);\n\n  return (\n    <audio ref={audioRef}>\n      <source src={audioFile} type=\"audio/mp3\" />\n    </audio>\n  );\n}\n\nexport const AudioPlayer = memo(AudioPlayerComp);\n","import React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../../AppContextProvider';\nimport './VolumeControl.css';\nlet timeoutHandle;\nexport const VolumeControl = () => {\n  const { state, dispatch } = useAppContext();\n\n  const setVolume = (e = 0.0) => {\n    let icon = state.volumeIcon;\n    let playerVolume = Number(e);\n    if (playerVolume === 0.0) {\n      icon = 'fa-volume-off';\n    } else if (playerVolume > 0.2 && playerVolume < 0.6) {\n      icon = 'fa-volume-down';\n    } else if (playerVolume > 0.6) {\n      icon = 'fa-volume-up';\n    }\n    if (state.playerVolume !== playerVolume) {\n      setTimeout(() => {\n        dispatch({\n          type: 'setVolume',\n          payload: { playerVolume, volumeIcon: icon },\n        });\n      }, 0);\n    }\n  };\n\n  const onMouseEnter = (e) => {\n    clearTimeout(timeoutHandle);\n  };\n\n  const onMouseLeave = (e) => {\n    dispatch({\n      type: 'showVolumeControl',\n      payload: { isVolumeControl: !state.isVolumeControl },\n    });\n  };\n\n  useEffect(() => {\n    setVolume(state.playerVolume);\n    timeoutHandle = setTimeout(() => {\n      dispatch({\n        type: 'showVolumeControl',\n        payload: { isVolumeControl: !state.isVolumeControl },\n      });\n    }, 2500);\n    return () => {};\n  }, [state.playerVolume]);\n\n  return (\n    <div\n      className=\"volumeControl\"\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      <i className={`fas ${state.volumeIcon}`}></i>\n      <input\n        type=\"range\"\n        name=\"volume\"\n        min=\"0.0\"\n        max=\"1.0\"\n        step=\"0.1\"\n        className=\"volume\"\n        value={state.playerVolume}\n        onChange={(e) => setVolume(e.target.value)}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useAppContext } from '../../AppContextProvider';\nimport { AudioPlayer } from '../AudioPlayer';\nimport './Tracker.css';\n\nexport const Tracker = () => {\n  const { state } = useAppContext();\n  // console.log(state.currentSong.name, state.isSongPlaying, state.playerVolume);\n  const [tracker, setTrack] = useState({ currentTime: 0, defaultTime: 0 });\n\n  const onTimeUpdateHandler = (e) => {\n    const songDuration = parseFloat(e.trackDuration / 60).toFixed(2);\n    const currentTime = parseFloat(e.currentTime / 60).toFixed(2);\n    const w = (e.currentTime / e.trackDuration) * 100;\n    const progress = parseInt(w);\n    setTrack({ songDuration, currentTime, progress });\n  };\n\n  const updateProgress = ($event) => {\n    var d = Number(tracker.songDuration || 0);\n    const w = (tracker.currentTime / tracker.songDuration) * 100;\n    var s = Math.round(($event.pageX / w) * d) || 0;\n    setTrack({ ...tracker, defaultTime: s });\n  };\n\n  return (\n    <div className=\"tracker\">\n      <AudioPlayer\n        currentSongName={state.currentSong.name}\n        volume={state.playerVolume}\n        isPlaying={state.isSongPlaying}\n        onTimeUpdate={onTimeUpdateHandler}\n        defaultTime={tracker.defaultTime}\n        onEnd={(e) => console.log('onEnd', e)}\n      />\n      <div className=\"trackTimes\">\n        {tracker.currentTime !== 0 && (\n          <span className=\"currentTime\">{tracker.currentTime}</span>\n        )}\n        {tracker.songDuration !== 0 && (\n          <span className=\"duration\">{tracker.songDuration}</span>\n        )}\n      </div>\n      <div\n        className=\"progressbar\"\n        title={tracker.currentTime}\n        onClick={updateProgress}\n      >\n        <span\n          id=\"progress\"\n          className=\"progress\"\n          style={{ width: `${tracker.progress}%` }}\n        ></span>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useAppContext } from '../../AppContextProvider';\nimport './SongInfo.css';\n\nexport const SongInfo = () => {\n  const { state, dispatch } = useAppContext();\n  return (\n    <div className=\"album-info\">\n      {state.currentSong && (\n        <div className=\"\">\n          <p className=\"song-title\">{state.currentSong.name}</p>\n          <p className=\"artist\">{state.currentSong.artist}</p>\n        </div>\n      )}\n      <div className=\"loop-songs\">\n        <a\n          href=\"#\"\n          title=\"Album\"\n          className={state.loopSongs !== 'Once' ? 'active' : ''}\n          onClick={() => dispatch({ type: 'setLoopSongs' })}\n        >\n          <i className=\"fas fa-sync-alt\"></i>\n        </a>\n        {state.loopSongs === 'This' && <small>1</small>}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useAppContext } from '../../AppContextProvider';\nimport './PlayerActions.css';\n\nexport const PlayerActions = () => {\n  const { state, dispatch } = useAppContext();\n  return (\n    <div className=\"player-actions\">\n      <div className=\"player-controls \">\n        <a\n          href=\"#\"\n          title=\"Volume\"\n          onClick={() =>\n            dispatch({\n              type: 'showVolumeControl',\n              payload: { isVolumeControl: !state.isVolumeControl },\n            })\n          }\n        >\n          <i className={`fa ${state.volumeIcon}`}></i>\n        </a>\n        <a\n          href=\"#\"\n          className=\"play-buttons\"\n          onClick={() => dispatch({ type: 'previous' })}\n          title=\"Previous\"\n        >\n          <i className=\"fa fa-backward\"></i>\n        </a>\n        {state.isSongPlaying ? (\n          <a\n            href=\"#\"\n            className=\"play-buttons play\"\n            onClick={() => dispatch({ type: 'pause' })}\n            title=\"Pause\"\n          >\n            <i className=\"fa fa-pause\"></i>\n          </a>\n        ) : (\n          <a\n            href=\"#\"\n            className=\"play-buttons play\"\n            onClick={() => dispatch({ type: 'play' })}\n            title=\"Play\"\n          >\n            <i className=\"fa fa-play\"></i>\n          </a>\n        )}\n\n        <a\n          href=\"#\"\n          className=\"play-buttons\"\n          onClick={() => dispatch({ type: 'next' })}\n          title=\"Next\"\n        >\n          <i className=\"fa fa-forward\"></i>\n        </a>\n        <a\n          href=\"#\"\n          title=\"Shuffle\"\n          className={state.isRandomSongs ? 'active' : ''}\n          onClick={() => dispatch({ type: 'random' })}\n        >\n          <i className=\"fa fa-random\"></i>\n        </a>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Tracker } from './../Tracker/Tracker';\nimport { SongInfo } from './../SongInfo/SongInfo';\nimport { VolumeControl } from './../VolumeControl/VolumeControl';\nimport './PlayerView.css';\n\nimport { PlayerActions } from './../PlayerActions/PlayerActions';\n\nexport const PlayerView = ({ name, cover, isVolumeControl, className }) => {\n  return (\n    <div className={`${className} album-cover`}>\n      <img src={cover} alt={name} id=\"cover\" />\n      <Tracker />\n      <SongInfo />\n      <PlayerActions />\n      {isVolumeControl && <VolumeControl />}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Header } from './Components/Header/Header';\n\nimport { PlayListView } from './Components/PlayListView/PlayListView';\nimport { getSongInfo, loadScriptFile } from './musicService';\nimport { useAppContext } from './AppContextProvider';\nimport { cover, playlistsongs } from './config';\nimport { PlayerView } from './Components/PlayerView/PlayerView';\nimport './App.css';\n\nfunction App() {\n  const playList = useRef([]);\n  const { state, dispatch } = useAppContext();\n  const [navHeading, setHeading] = useState('');\n\n  const setData = (songs) => {\n    if (!songs || songs.length === 0) return;\n    if (!navHeading) setHeading(songs[0].album);\n    if (Object.keys(state.currentSong).length === 0) {\n      dispatch({\n        type: 'setCurrentSong',\n        payload: {\n          ...songs[0],\n          cover,\n        },\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (document.querySelector('#id3')) {\n      dispatch({ type: 'setSongs', payload: playList?.current });\n      return;\n    }\n\n    loadScriptFile().then(() => {\n      getSongInfo(playlistsongs).then((songs) => {\n        playList.current = songs;\n        dispatch({ type: 'setSongs', payload: songs });\n        setData(songs);\n      });\n    });\n\n    return () => {};\n  }, [playList?.current]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"music-player\">\n        <Header Heading={navHeading} />\n        <PlayerView\n          className={state.currentView === 'musicPlayer' ? '' : 'hide'}\n          cover={state.currentSong.cover}\n          name={state.currentSong.name}\n          isVolumeControl={state.isVolumeControl}\n        />\n        <PlayListView\n          className={state.currentView === 'PlayList' ? '' : 'hide'}\n          album={playList.current}\n          currentSong={state.currentSong}\n          isSongPlaying={state.isSongPlaying}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const getSongInfo = (playlistsongs, index = 0) => {\n  let playlist = [];\n\n  return new Promise((resolve, reject) => {\n    function processData(index) {\n      let audioFile = './assets/media/' + playlistsongs[index]?.name;\n\n      window.ID3.loadTags(audioFile, function () {\n        const tags = window.ID3.getAllTags(audioFile);\n        const { title, album, artist } = tags;\n        var temp = { title, album, artist };\n        temp.name = playlistsongs[index].name;\n\n        playlist.push(temp);\n\n        if (index < playlistsongs.length - 1) {\n          processData(index + 1);\n        } else {\n          resolve(playlist);\n        }\n      });\n    }\n    processData(index);\n  });\n};\n\nexport const loadScriptFile = () => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = './assets/id3-minimized.js';\n    script.id = 'id3';\n    script.onload = () => resolve();\n    document.body.appendChild(script);\n  });\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { AppContextProvider } from './AppContextProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContextProvider>\n      <App />\n    </AppContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}