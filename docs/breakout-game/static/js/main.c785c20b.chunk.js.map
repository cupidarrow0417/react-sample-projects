{"version":3,"sources":["components/utils/score.js","components/utils/game.js","components/breakoutGame/game.js","components/rules/rules.js","App.js","serviceWorker.js","index.js"],"names":["STORE_KEY","update","data","localStorage","setItem","canvas","ctx","helpers","get","getItem","clear","scoreBoard","level","score","best","scoreUtils","speed","paddleWidth","out","ball","size","dx","dy","visible","paddle","w","h","brickInfo","padding","offsetX","offsetY","bricks","drawBall","color","beginPath","arc","x","y","Math","PI","fillStyle","fill","closePath","moveBall","width","height","forEach","column","brick","alert","setTimeout","showAllBricks","draw","clearRect","rect","font","fillText","canvasRef","requestAnimationFrame","keyDown","e","key","keyUp","i","j","createBricks","init","canvasRefs","current","document","addEventListener","getContext","console","log","Game","useRef","useEffect","gameUtils","id","ref","Rules","className","onClick","target","nextSibling","classList","add","remove","parentElement","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c785c20b.chunk.js","sourcesContent":["const STORE_KEY = 'breakoutGameBestScore';\n\nfunction update(data = 0) {\n  localStorage.setItem(STORE_KEY, data);\n}\n\nfunction getFromDataStore() {\n  return localStorage.getItem(STORE_KEY);\n}\n\nfunction get() {\n  return getFromDataStore() || 0;\n}\n\nconst helpers = {\n  get,\n  update,\n  clear: () => update(),\n};\n\nexport default helpers;\n","import scoreUtils from '../utils/score';\nconst scoreBoard = {\n  level: 1,\n  score: 0,\n  best: scoreUtils.get(),\n};\n\nlet canvas;\nlet ctx;\nlet speed = 4;\nlet paddleWidth = 80;\nlet out = false;\n\nconst brickRowCount = 9;\nconst brickColumnCount = 5;\nconst delay = 500; //delay to reset the game\n\n// Create ball props\nconst ball = {\n  size: 10,\n  speed,\n  dx: 4,\n  dy: -4,\n  visible: true,\n};\n\n// Create paddle props\nconst paddle = {\n  w: paddleWidth,\n  h: 10,\n  speed: 8,\n  dx: 0,\n  visible: true,\n};\n\n// Create brick props\nconst brickInfo = {\n  w: 70,\n  h: 20,\n  padding: 10,\n  offsetX: 45,\n  offsetY: 60,\n  visible: true,\n};\n\n// Create bricks\nconst bricks = [];\nfunction createBricks() {\n  for (let i = 0; i < brickRowCount; i++) {\n    bricks[i] = [];\n    for (let j = 0; j < brickColumnCount; j++) {\n      const x = i * (brickInfo.w + brickInfo.padding) + brickInfo.offsetX;\n      const y = j * (brickInfo.h + brickInfo.padding) + brickInfo.offsetY;\n      bricks[i][j] = { x, y, ...brickInfo };\n    }\n  }\n}\ncreateBricks();\n\n// Draw ball on canvas\nfunction drawBall(color = '#0095dd') {\n  ctx.beginPath();\n  ctx.arc(ball.x, ball.y, ball.size, 0, Math.PI * 2);\n  ctx.fillStyle = ball.visible ? color : 'transparent';\n  ctx.fill();\n  ctx.closePath();\n}\n\n// Draw paddle on canvas\nfunction drawPaddle() {\n  ctx.beginPath();\n  ctx.rect(paddle.x, paddle.y, paddle.w, paddle.h);\n  ctx.fillStyle = paddle.visible ? '#0095dd' : 'transparent';\n  ctx.fill();\n  ctx.closePath();\n}\n\n// Draw score on canvas\nfunction drawScore() {\n  ctx.font = '20px Arial';\n  scoreBoard.best =\n    scoreBoard.score > scoreBoard.best ? scoreBoard.score : scoreBoard.best;\n  ctx.fillText(`Level: ${scoreBoard.level}`, canvas.width - 700, 30);\n  ctx.fillText(`Score: ${scoreBoard.score}`, canvas.width - 500, 30);\n  ctx.fillText(`Best: ${scoreBoard.best}`, canvas.width - 300, 30);\n  scoreUtils.update(scoreBoard.best);\n}\n\n// Draw bricks on canvas\nfunction drawBricks() {\n  bricks.forEach((column) => {\n    column.forEach((brick) => {\n      ctx.beginPath();\n      ctx.rect(brick.x, brick.y, brick.w, brick.h);\n      ctx.fillStyle = brick.visible ? '#0095dd' : 'transparent';\n      ctx.fill();\n      ctx.closePath();\n    });\n  });\n}\n\n// Move paddle on canvas\nfunction movePaddle() {\n  paddle.x += paddle.dx;\n\n  // Wall detection\n  if (paddle.x + paddle.w > canvas.width) {\n    paddle.x = canvas.width - paddle.w;\n  }\n\n  if (paddle.x < 0) {\n    paddle.x = 0;\n  }\n}\n\n// Move ball on canvas\nfunction moveBall() {\n  ball.x += ball.dx;\n  ball.y += ball.dy;\n\n  // Wall collision (right/left)\n  if (ball.x + ball.size > canvas.width || ball.x - ball.size < 0) {\n    ball.dx *= -1; // ball.dx = ball.dx * -1\n  }\n\n  // Wall collision (top/bottom)\n  if (ball.y + ball.size > canvas.height || ball.y - ball.size < 0) {\n    ball.dy *= -1;\n  }\n\n  // console.log(ball.x, ball.y);\n\n  // Paddle collision\n  if (\n    ball.x - ball.size > paddle.x &&\n    ball.x + ball.size < paddle.x + paddle.w &&\n    ball.y + ball.size > paddle.y\n  ) {\n    ball.dy = -ball.speed;\n  }\n\n  // Brick collision\n  bricks.forEach((column) => {\n    column.forEach((brick) => {\n      if (brick.visible) {\n        if (\n          ball.x - ball.size > brick.x && // left brick side check\n          ball.x + ball.size < brick.x + brick.w && // right brick side check\n          ball.y + ball.size > brick.y && // top brick side check\n          ball.y - ball.size < brick.y + brick.h // bottom brick side check\n        ) {\n          ball.dy *= -1;\n          brick.visible = false;\n\n          increaseScore();\n        }\n      }\n    });\n  });\n\n  // Hit bottom wall - Lose\n  if (ball.y + ball.size > canvas.height) {\n    scoreBoard.score = 0;\n    scoreBoard.level = 1;\n    paddleWidth = 80;\n    paddle.w = paddleWidth;\n    speed = 0;\n    out = true;\n    showAllBricks();\n  }\n}\n\n// Increase score\nfunction increaseScore() {\n  scoreBoard.score++;\n\n  if (scoreBoard.score % (brickRowCount * brickColumnCount) === 0) {\n    ball.visible = false;\n    paddle.visible = false;\n    alert('Congratulations, You’ve Reached the Next Level');\n    speed += 0.5;\n    scoreBoard.level += 1;\n    paddleWidth += 30;\n    setTimeout(function () {\n      showAllBricks();\n      // score = 0;\n      paddle.x = canvas.width / 2 - 40;\n      paddle.y = canvas.height - 20;\n      paddle.w = paddleWidth;\n      ball.x = canvas.width / 2;\n      ball.y = canvas.height / 2;\n      ball.visible = true;\n      paddle.visible = true;\n    }, delay);\n  }\n}\n\n// Make all bricks appear\nfunction showAllBricks() {\n  bricks.forEach((column) => {\n    column.forEach((brick) => (brick.visible = true));\n  });\n}\n\n// Draw everything\nfunction draw() {\n  // clear canvas\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  drawBall();\n  drawPaddle();\n  drawScore();\n  drawBricks();\n}\n\n// Update canvas drawing and animation\nfunction update(canvasRef) {\n  movePaddle();\n  moveBall();\n\n  // Draw everything\n  draw();\n\n  // game lost\n  if (out) {\n    out = false;\n    drawBall('#FF6347'); // change ball color\n    setTimeout(() => {\n      requestAnimationFrame(update);\n    }, delay);\n  } else requestAnimationFrame(update);\n}\n// Keydown event\nfunction keyDown(e) {\n  if (e.key === 'Right' || e.key === 'ArrowRight') {\n    paddle.dx = paddle.speed;\n  } else if (e.key === 'Left' || e.key === 'ArrowLeft') {\n    paddle.dx = -paddle.speed;\n  }\n}\n\n// Keyup event\nfunction keyUp(e) {\n  if (\n    e.key === 'Right' ||\n    e.key === 'ArrowRight' ||\n    e.key === 'Left' ||\n    e.key === 'ArrowLeft'\n  ) {\n    paddle.dx = 0;\n  }\n}\n\nfunction init(canvasRefs) {\n  if (!(canvasRefs && canvasRefs.current)) {\n    console.log('canvas reference not available');\n    return;\n  }\n  canvas = canvasRefs.current;\n  if (!ctx) {\n    // Keyboard event handlers\n    document.addEventListener('keydown', keyDown);\n    document.addEventListener('keyup', keyUp);\n\n    ball.x = canvas.width / 2;\n    ball.y = canvas.height / 2;\n\n    paddle.x = canvas.width / 2 - 40;\n    paddle.y = canvas.height - 20;\n    ctx = canvas.getContext('2d');\n  }\n  update();\n}\n\nconst helpers = {\n  init,\n};\n\nexport default helpers;\n","import React, { useRef, useEffect } from 'react';\nimport './game.css';\nimport gameUtils from '../utils/game';\n\nconst Game = () => {\n  const canvasRef = useRef('canvas');\n\n  useEffect(() => {\n    gameUtils.init(canvasRef);\n  }, []);\n\n  return (\n    <div>\n      <canvas id=\"canvas\" ref={canvasRef} width=\"800\" height=\"500\"></canvas>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport './rules.css';\n\nconst Rules = () => {\n  return (\n    <div>\n      <h1>Breakout!</h1>\n      <button\n        id=\"rules-btn\"\n        className=\"btn rules-btn\"\n        onClick={(e) => e.target.nextSibling.classList.add('show')}\n      >\n        Show Rules\n      </button>\n      <div\n        id=\"rules\"\n        className=\"rules\"\n        onClick={(e) => e.target.classList.remove('show')}\n      >\n        <h2>How To Play:</h2>\n        <p>\n          Use your right and left keys to move the paddle to bounce the ball up\n          and break the blocks.\n        </p>\n        <p>If you miss the ball, your score and the blocks will reset.</p>\n        <button\n          id=\"close-btn\"\n          className=\"btn\"\n          onClick={(e) => e.target.parentElement.classList.remove('show')}\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Rules;\n","import React from 'react';\nimport './App.css';\nimport Game from './components/breakoutGame/game';\nimport Rules from './components/rules/rules';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Rules />\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}